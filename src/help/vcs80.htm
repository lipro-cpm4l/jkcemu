<html>
<body>
  <h1>Hinweise zur Emulation des VCS-80</h1>
    Der VCS-80 ist ein Eigenbau-Lerncomputer,
    dessen Bauanleitung Eckhard Schiller 1983 in der Zeitschrift
    <em>radio fernsehen elektronik</em> ver&ouml;ffentlicht hat.
  <br<<br>

  <h2>1. Emulierte Hardware</h2>
    <ul>
      <li>0,5 KByte ROM
      <li>1 KByte RAM
      <li>8-stellige 7-Segment-Anzeige
    </ul>
    Der ROM liegt im Bereichen 0000-01FF.
    Aufgrund der unvollst&auml;ndigen Adressdekodierung
    ist er auch im Bereich 0200-03FF sichtbar.
  <br><br>
    Die 7-Segment-Anzeige hat eigentlich 9 Stelen.
    Allerdings wird mit mittlere Stelle nicht verwendet.
    Somit gibt es vier Stellen links und vier Stellen rechts.
  <br><br>

  <h3>1.1. Tastatur</h3>
    Die Tabelle zeigt, wie die Tasten des VCS-80 auf der Tastatur
    des Emulatorrechners abgebildet werden:
    <br>
    <table border="1">
      <tr>
	<th valign="top">VCS-80-Taste</th>
	<th valign="top">Taste im Emulator</th>
	<th valign="top">Bedeutung</th>
      </tr>
      <tr>
	<td valign="top" nowrap>RESET</td>
	<td valign="top" nowrap>Escape</td>
	<td valign="top">Zur&uuml;cksetzen</td>
      </tr>
      <tr>
	<td valign="top" nowrap>PE</td>
	<td valign="top" nowrap>P</td>
	<td valign="top">
	  Periphere Eingabe,<br>
	  Vom Monitorprogramm mit keiner eigenst&auml;ndigen Funktion belegt
	</td>
      </tr>
      <tr>
	<td valign="top" nowrap>ST</td>
	<td valign="top" nowrap>S</td>
	<td valign="top">Schrittbetrieb</td>
      </tr>
      <tr>
	<td valign="top" nowrap>TR</td>
	<td valign="top" nowrap>T</td>
	<td valign="top">Unterbrechnungspunkt eingeben</td>
      </tr>
      <tr>
	<td valign="top" nowrap>GO</td>
	<td valign="top" nowrap>G</td>
	<td valign="top">Programm starten</td>
      </tr>
      <tr>
	<td valign="top" nowrap>RE</td>
	<td valign="top" nowrap>R</td>
	<td valign="top">Register anzeigen</td>
      </tr>
      <tr>
	<td valign="top" nowrap>MA</td>
	<td valign="top" nowrap>M</td>
	<td valign="top">Eingegebene Adresse &uuml;bernehmen</td>
      </tr>
      <tr>
	<td valign="top" nowrap>A-</td>
	<td valign="top" nowrap>-</td>
	<td valign="top">Vorherige Adresse</td>
      </tr>
      <tr>
	<td valign="top" nowrap>A+</td>
	<td valign="top" nowrap>+</td>
	<td valign="top">N&auml;chste Adresse</td>
      </tr>
      <tr>
	<td valign="top" nowrap>0...9</td>
	<td valign="top" nowrap>0...9</td>
	<td valign="top">Adress-/Dateneingabe</td>
      </tr>
      <tr>
	<td valign="top" nowrap>A...F</td>
	<td valign="top" nowrap>A...F oder a...f</td>
	<td valign="top">Adress-/Dateneingabe</td>
      </tr>
    </table>
  <br>
    <b>Achtung!</b> Escape l&ouml;st der Einfachheit halber
    RESET ohne Sicherheitsabfrage aus,
    auch wenn in den Einstellungen daf&uuml;r die Sicherheitsabfrage
    aktiviert ist.
  <br><br>


  <h2>2. Im ROM enthaltene Software</h2>
    <ul>
      <li>Originales Monitorprprogramm
    </ul>
  <br>

  <h3>2.1. Beschreibung des Monitorprogramms</h3>
    Nach einem RESET steht links <em>Mo</em> und rechts eine beliebige Adresse.
  <br><br>

  <h4>2.1.1. Speicherzellen anzeigen und beschreiben</h4>
    <ol>
      <li>Zur&uuml;cksetzen (Taste <em>RESET</em>)
      <li>Adresse eingeben (Tasten <em>0</em>...<em>9</em>,
	  <em>A</em>...<em>F</em>, <em>A+</em> und <em>A-</em>)
      <li>Adresse &uuml;bernehmen (Taste <em>MA</em>),<br>
	  Sie befinden sich jetzt im Hauptzyklus, d.h. die Stellen
	  7 und 8 zeigen das Byte auf der &uuml;bernommenen Adresse an
	  und die beiden Stellen davor das Byte der vorherigen Adresse.
      <li>Gegebenfalls Wert eingeben
	  (Tasten <em>0</em>...<em>9</em> und <em>A</em>...<em>F</em>)
      <li>Wert &uuml;bernehmen und n&auml;chste Adresse angezeigen
	  (Taste <em>A+</em>),<br>
      <li>Weiter mit Punkt 4
    </ol>
  <br><br>

  <h4>2.1.2. Register anzeigen</h4>
    <em>RESET</em> &rarr; <em>RE</em>
  <br><br>
    Es wird das AF-Register angezeigt.
    Mit den Tasten <em>A+</em>, <em>A-</em>, <em>MA</em>
    <em>RE</em> und <em>GO</em> wechseln Sie zu den Registern
    BC, DE, HL, IX bzw. IY.
    Jede andere Funktionstaste f&uml;hrt zum Hauptzyklus.
  <br><br>

  <h4>2.1.3. Programmstart</h4>
    <em>RESET</em> &rarr; <em>GO</em> &rarr; Adresse eingeben
    &rarr; beliebige Funktionstaste
  <br><br>

  <h4>2.1.4. Einzelschrittbetrieb</h4>
    <em>RESET</em> &rarr; Adresse eingeben &rarr; <em>MA</em>
    &rarr; <em>ST</em>
  <br><br>
    Mit jedem Bet&auml;tigen der Taste <em>ST</em> wird nun
    ein Befehl abgearbeitet.
  <br><br>
    Technisch wird der Schrittbetrieb mit Hilfe eines Interrupts realisiert.
    Vor dem auszuf&uuml;hrenden Befehl wird ein Interruptfreigabebefehl
    geschrieben und dieser auch angesprungen.
    W&auml;hrend der Befehlsausf&uuml;hrung l&ouml;st dann
    die Adressleitung A0 &uuml;ber PIO-Bit B7 einen Interrupt aus.
    Die Interrupt-Service-Routine korrigiert die Speicherzelle,
    in die der Interruptfreigabebefehl geschrieben wurde
    und kehrt in die Eingabeschelife zur&uuml;ck.
  <br><br>
    F&uuml;r den Schrittbetrieb gelten folgende Einschr&auml;nkungen:
    <ul>
      <li>Die Speicherzelle vor dem auszuf&uuml;hrenden Befehl muss RAM sein.
      <li>Es k&ouml;nnen keine Befehle im Schrittbetrieb ausgef&uuml;hrt
	  werden, die das Interrupt-System beeinflussen.
    </ul>
  <br>

  <h4>2.1.5. Unterbrechungspunkt</h4>
    <em>RESET</em> &rarr; <em>TR</em> &rarr; Adresse eingeben
    &rarr; beliebige Funktionstaste
  <br><br>
    Auf die angegebene Adresse wird ein Restart-Befehl geschrieben.
    Wenn die Programmausf&uuml;hrung diesen Befehl erreicht,
    wird die Speicherzelle wieder mit dem urspr&uuml;glichen Wert beschrieben
    und in die Eingabeschleife zur&uuml;ckgekehrt.
  <br><br>
    Ein Unterbrechungspunkt kann nur auf einer RAM-Adresse gesetzt werden.
</body>
</html>

