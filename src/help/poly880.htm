<html>
<body>
 <h1>Hinweise zur Emulation des Poly-Computers 880</h1>
  Der Poly-Computer 880, manchmal auch Polycomputer geschrieben,
  ist ein vom VEB Polytechnik Karl-Marx-Stadt (heute Chemnitz)
  hergestellter Lerncomputer mit einer 7-Segemt-Anzeige
  und Hexadezimaltastatur.
  Als Besonderheit bietet der Poly-Computer einen hardwarem&auml;&szlig;igen
  Schrittbetrieb, bei dem sogar die einzelnen Taktzyklen des Mikroprozessors
  verfolgt werden k&ouml;nnen.
  LEDs zeigen dabei die Signale das Adress-, Daten- und Steuerbusses an.
  Dieser hardwarem&auml;&szlig;ige Schrittbetrieb und damit die Anzeige
  der Bussignale wird von JKCEMU allerdings nicht emuliert.
 <br/><br/>
  <ul>
   <li>
    <a href="poly880.htm#hardware">1. Emulierte Hardware</a>
    <ul>
     <li><a href="poly880.htm#keyboard">1.1. Tastatur</a></li>
     <li><a href="poly880.htm#hwstep">1.2. Hardware-Schrittbetrieb</a></li>
    </ul>
   </li>
   <li>
    <a href="poly880.htm#software">2. Im ROM enthaltene Software</a>
    <ul>
     <li>
      <a href="poly880.htm#mem">2.1.1. Speicherzellen anzeigen/&auml;ndern</a>
     </li>
     <li>
      <a href="poly880.htm#reg">2.1.2. Register anzeigen/&auml;ndern</a>
     </li>
     <li><a href="poly880.htm#run">2.1.3. Programm starten</a></li>
     <li><a href="poly880.htm#step">2.1.4. Schrittbetrieb</a></li>
     <li><a href="poly880.htm#port_in">2.1.5. Port-Eingabe</a></li>
     <li><a href="poly880.htm#port_out">2.1.6. Port-Ausgabe</a></li>
     <li><a href="poly880.htm#trans">2.1.7. Datenbereich verschieben</a></li>
     <li><a href="poly880.htm#fill">2.1.8. Datenbereich f&uuml;llen</a></li>
     <li>
      <a href="poly880.htm#load">2.1.9. Datenbereich von Kassette laden</a>
     </li>
     <li>
      <a href="poly880.htm#save">2.1.10. Datenbereich auf Kassette speichern</a>
     </li>
    </ul>
   </li>
   <li>
    <a href="poly880.htm#etc">3. Sonstiges</a>
    <ul>
     <li>
      <a href="poly880.htm#ext_rom">3.1. Einbindung externer ROM-Dateien</a>
     </li>
    </ul>
   </li>
  </ul>
 <br/>


 <h2><a name="hardware">1. Emulierte Hardware</a></h2>
  <ul>
   <li>2 KByte ROM im Adressbereich 0000-03FF und 1000-03FF</li>
   <li>1 KByte RAM im Adressbereich 4000-43FF</li>
   <li>8-stellige 7-Segment-Anzeige</li>
   <li>Hexadezimaltastatur mit zus&auml;tzlichen Funktionstasten</li>
   <li>Kassettenrecorderanschluss</li>
   <li>
    optional:
    <ul>
     <li>32&nbsp;KByte RAM-Erweiterung (8000h-FFFFh)</li>
     <li>ROM&nbsp;2 (2000h-23FFh)</li>
     <li>ROM&nbsp;3 (3000h-33FFh)</li>
    </ul>
   </li>
  </ul>
  Aufgrund der unvollst&auml;ndigen Adressdekodierung
  sind au&szlig;er bei der optionalen RAM-Erweiterung
  die einzelnen ROM- und RAM-Speicherbereiche jeweils
  vier mal hintereinander sichtbar,
  d.h. X000-X3FF sehen Sie auch in X400-X7FF, in X800-XBFF und in XC00-XFFF,
  wobei X f&uuml;r 0...4 steht.
 <br/><br/>

 <h3><a name="keyboard">1.1. Tastatur</a></h3>
  Die Tabelle zeigt, wie die Tasten des Poly-Computers auf der Tastatur
  des Emulatorrechners abgebildet werden:
 <br/>
  <table border="1">
   <tr>
    <th>Poly880-Taste</th>
    <th>Taste in JKCEMU</th>
    <th>Bedeutung</th>
   </tr>
   <tr>
    <td valign="top">BACK</td>
    <td valign="top">- oder BackSpace</td>
    <td>Vorherige Adresse</td>
   </tr>
   <tr>
    <td valign="top">EXEC</td>
    <td valign="top">X oder Enter</td>
    <td>Aktion ausf&uuml;hren</td>
   </tr>
   <tr>
    <td valign="top">RES</td>
    <td valign="top">Escape</td>
    <td>RESET</td>
   </tr>
   <tr>
    <td valign="top">FCT</td>
    <td valign="top">F1</td>
    <td>Funktion</td>
   </tr>
   <tr>
    <td valign="top">GO</td>
    <td valign="top">G</td>
    <td>Programm starten</td>
   </tr>
   <tr>
    <td valign="top">REG</td>
    <td valign="top">R</td>
    <td>Register</td>
   </tr>
   <tr>
    <td valign="top">STEP</td>
    <td valign="top">S</td>
    <td>Schrittbetrieb</td>
   </tr>
   <tr>
    <td valign="top">MEM</td>
    <td valign="top">M</td>
    <td>Speicher anzeigen/ver&auml;ndern</td>
   </tr>
   <tr>
    <td valign="top">0...9, A...F</td>
    <td valign="top">0...9, A...F</td>
    <td>Adress-/Dateneingabe</td>
   </tr>
   <tr>
    <td valign="top">CYCL</td>
    <td></td>
    <td>
     Einzelschritt (einzelner Taktzyklus) im Hardware-Schrittbetrieb,<br/>
     von JKCEMU nicht emuliert
    </td>
   </tr>
   <tr>
    <td valign="top">MCYCL</td>
    <td></td>
    <td>
     Hardware-Schrittbetrieb einschalten,<br/>
     von JKCEMU nicht emuliert
    </td>
   </tr>
   <tr>
    <td valign="top">MON</td>
    <td valign="top">F2</td>
    <td>
     R&uuml;ckkehr in das Monitorprogramm<br/>
     (Im Original wird damit auch der Hardware-Schrittbetrieb ausgeschaltet,
     der von JKCEMU jedoch nicht emuliert wird.)
    </td>
   </tr>
  </table>
 <br/>
  <b>Achtung!</b> Escape l&ouml;st der Einfachheit halber
  RESET ohne Sicherheitsabfrage aus,
  auch wenn in den Einstellungen daf&uuml;r die Sicherheitsabfrage
  aktiviert ist.
 <br/><br/>

 <h3><a name="hwstep">1.2. Hardware-Schrittbetrieb</a></h3>
  Im Original gibt es einen Hardware-Schrittbetrieb,
  mit dem man die einzelnen Taktzyklen des Mikroprozessors
  schrittweise abarbeiten kann.
  JKCEMU emuliert diesen Hardware-Schrittbetrieb nicht.
  Es wird jedoch der ebenfalls vorhandene Software-Schrittbetrieb
  emuliert (Taste&nbsp;<em>STEP</em>),
  der zur schrittweisen Abarbeitung ganzer Maschinenbefehle dient.
 <br/><br/>


 <h2><a name="software">2. Im ROM enthaltene Software</a></h2>
  <ul>
   <li>Originales Monitorprogramm</li>
  </ul>
 <br/>


 <h3><a name="mon">2.1. Hinweise zur Bedienung des Monitorprogramms</a></h3>

 <h3><a name="mem">2.1.1. Speicherzellen anzeigen/&auml;ndern</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>MEM&nbsp;(M)</em>
  &rarr; &lt;Adresse&gt; &rarr; <em>EXEC&nbsp;(Enter)</em>
  [ &rarr; &lt;Wert&gt; &rarr; <em>EXEC&nbsp;(Enter)</em> ]
 <br/><br/>
  Mit jedem Bet&auml;tigen der Taste <em>EXEC&nbsp;(Enter)</em>
  wird die n&auml;chste Speicherzelle angezeigt.
 <br/><br/>

 <h3><a name="reg">2.1.2. Register anzeigen/&auml;ndern</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>REG&nbsp;(R)</em>
  &rarr; &lt;Registerauswahl&gt;
  [ &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; &lt;H-Wert&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; &lt;L-Wert&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> ]
 <br/><br/>
  Nach Dr&uuml;cken von <em>REG&nbsp;(R)</em> w&auml;hlen Sie
  durch Bet&auml;tigen einer bestimmten Taste
  das gew&uuml;nschte Doppelregister aus.
  Dabei gilt folgende Zuordnung:
  <table border="1">
   <tr><th>Taste</th><th>Doppelregister</th></tr>
   <tr><td>0</td><td>AF</td></tr>
   <tr><td>1</td><td>BC</td></tr>
   <tr><td>2</td><td>DE</td></tr>
   <tr><td>3</td><td>HL</td></tr>
   <tr><td>4</td><td>AF'</td></tr>
   <tr><td>5</td><td>BC'</td></tr>
   <tr><td>6</td><td>DE'</td></tr>
   <tr><td>7</td><td>HL'</td></tr>
   <tr><td>8</td><td>I und Status des EI-Flip-Flops</td></tr>
   <tr><td>9</td><td>IX</td></tr>
   <tr><td>A</td><td>IY</td></tr>
   <tr><td>B</td><td>SP</td></tr>
   <tr><td>C</td><td>PC</td></tr>
  </table>
 <br/>
  M&ouml;chten Sie nun den Registerinhalt &auml;ndern,
  so bet&auml;tigen Sie <em>EXEC&nbsp;(Enter)</em>,
  geben den Wert des h&ouml;herwertigen Einzelregisters ein,
  bet&auml;tigen wieder <em>EXEC&nbsp;(Enter)</em>,
  geben nun den Wert des niederwertigen Einzelregisters ein
  und bet&auml;tigen noch einmal <em>EXEC&nbsp;(Enter)</em>.
 <br/><br/>

 <h3><a name="run">2.1.3. Programm starten</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>GO&nbsp;(G)</em>
  [ &rarr; &lt;Startadresse&gt; ] &rarr; <em>EXEC&nbsp;(Enter)</em>
  [ &rarr; &lt;Haltepunkt&gt; ] &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>
  Startadresse und Haltepunkt k&ouml;nnen weggelassen werden.
  Fehlt die Startadresse, wird der im Registerrettebereich stehende Wert
  f&uuml;r <em>PC</em> genommen.
 <br/><br/>

 <h3><a name="step">2.1.4. Schrittbetrieb</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>STEP&nbsp;(S)</em>
  [ &rarr; &lt;Adresse&gt; ] &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>
  Dieses Kommando f&uuml;hrt den Befehl auf der angegebenen Adresse aus
  und h&auml;lt dann wieder an.
  Die Adresse kann weggelassen werden.
  In dem Fall wird dann der im Registerrettebereich stehende Wert
  f&uuml;r <em>PC</em> genommen.
 <br/><br/>

 <h3><a name="port_in">2.1.5. Port-Eingabe</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>FCT&nbsp;(F1)</em>
  &rarr; <em>0</em> &rarr; &lt;Port-Adresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>
  Mit jedem Dr&uuml;cken der Taste <em>EXEC&nbsp;(Enter)</em>
  wird das angegebene Eingabetor gelesen und der Wert angezeigt.
 <br/><br/>

 <h3><a name="port_out">2.1.6. Port-Ausgabe</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>FCT&nbsp;(F1)</em>
  &rarr; <em>1</em> &rarr; &lt;Port-Adresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em>
  &rarr; &lt;Wert&gt; &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>
  Nach dem ersten Dr&uuml;cken der Taste <em>EXEC&nbsp;(Enter)</em>
  geben Sie den auszugebenden Wert ein,
  der dann beim zweiten Bet&auml;tigen von <em>EXEC&nbsp;(Enter)</em>
  in das Ausgabetor geschrieben wird.
  Nun k&ouml;nnen Sie beliebig oft weitere Werte eingeben,
  die dann jeweils mit <em>EXEC&nbsp;(Enter)</em>
  ebenfalls auf dem Port ausgegeben werden.
 <br/><br/>

 <h3><a name="trans">2.1.7. Datenbereich verschieben</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>FCT&nbsp;(F1)</em>
  &rarr; <em>2</em> &rarr; &lt;Zieladresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; &lt;Quelladresse&gt;
  &rarr; &lt;L&auml;nge&gt; &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>
  Mit diesem Kommando verschieben Sie einen Datenbereich auf eine andere
  Adresse. Genau genommen werden die Daten nicht verschoben,
  sondern kopiert.
  Quell- und Zielbereich k&ouml;nnen sich &uuml;berlappen.
  Nach dem Verschieben erscheint in der Anzeige ein <em>F</em> wie fertig.
 <br/><br/>

 <h3><a name="fill">2.1.8. Datenbereich f&uuml;llen</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>FCT&nbsp;(F1)</em>
  &rarr; <em>3</em> &rarr; &lt;Anfangsadresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; &lt;L&auml;nge&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; &lt;Wert&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>

 <h3><a name="load">2.1.9. Datenbereich von Kassette laden</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>FCT&nbsp;(F1)</em>
  &rarr; <em>4</em> &rarr; &lt;Anfangsadresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; &lt;Endadresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>
  Nach Eingabe der Endadresse m&uuml;ssen Sie zweimal
  <em>EXEC&nbsp;(Enter)</em> dr&uuml;cken,
  bevor das Laden beginnt.
  Nach Abschluss des Ladens erscheint in der Anzeige ein <em>F</em>.
 <br/><br/>

 <h3><a name="save">2.1.10. Datenbereich auf Kassette speichern</a></h3>
  <em>RES&nbsp;(Escape)</em> &rarr; <em>FCT&nbsp;(F1)</em>
  &rarr; <em>5</em> &rarr; &lt;Anfangsadresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; &lt;Endadresse&gt;
  &rarr; <em>EXEC&nbsp;(Enter)</em> &rarr; <em>EXEC&nbsp;(Enter)</em>
 <br/><br/>
  Nach Eingabe der Endadresse m&uuml;ssen Sie zweimal
  <em>EXEC&nbsp;(Enter)</em> dr&uuml;cken,
  bevor das Speichern beginnt.
  Nach Abschluss des Speicherns erscheint in der Anzeige ein <em>F</em>.
 <br/><br/>


 <h2><a name="etc">3. Sonstiges</a></h2>

 <h3><a name="ext_rom">3.1. Einbindung externer ROM-Dateien</a></h3>
  Im originalen Poly-Computer&nbsp;880 sind die Datenleitungen negiert,
  d.h., die Bytes in den ROMs sind somit auch negiert.
  Wenn Sie nun solche ROM-Inhalte einbinden m&ouml;chten, muss JKCEMU wissen,
  ob die ROM-Dateien entsprechend dem Original negiert sind.
  Daf&uuml;r gibt es in den <a href="settings.htm">Einstellungen</a>
  die Option <em>ROM-Bytes sind negiert</em>.
  Sie m&uuml;ssen diese Option in jedem Fall richtig setzen,
  sobald sie eine externe ROM-Datei einbinden!
  Diese Option gilt f&uuml;r alle eingebunden ROM-Dateien gleicherma&szlig;en.
</body>
</html>

