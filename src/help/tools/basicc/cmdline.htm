<html>
<body>
 <h1><a href="../basicc.htm">BASIC-Compiler</a></h1>

 <h2>BASIC-Compiler mit Kommandozeile aufrufen</h2>
  Der JKCEMU-BASIC-Compiler kann mit einer Kommandozeile auch ohne
  den eigentlichen Emulator als eigenst&auml;ndiges Programm
  aufgerufen werden.
  Unter Windows m&uuml;ssen Sie dazu die Eingabeaufforderung starten
  (ggf. nach <em>cmd.exe</em> suchen).
  Die Kommandozeile zum Aufruf des BASIC-Compiler sieht
  folgenderma&szlig;en aus
  (Name und Pfad der JKCEMU-JAR-Datei sind entsprechend anzupassen):
 <br/><br/>
  <tt>java -jar jkcemu.jar --bc [Optionen] &lt;Quelltextdatei&gt;</tt>
 <br/><br/>
   oder
 <br/><br/>
  <tt>java -jar jkcemu.jar --basiccompiler [Optionen] &lt;Quelltextdatei&gt;</tt>
 <br/><br/>
  Folgende Optionen k&ouml;nnen angegeben werden
  (Gro&szlig;-/Kleinschreibung beachten!):
 <br/>
  <table border="1">
   <tr><th>Option</th><th>Bedeutung</th></tr>
   <tr>
    <td valign="top">-h</td>
    <td>Hilfe zu den BASIC-Compiler-Optionen anzeigen</td>
   </tr>
   <tr>
    <td valign="top" nowrap="nowrap">-f&nbsp;&lt;Datei&gt;</td>
    <td>
     weitere Kommandozeile aus Datei lesen
     <br/><br/>
     Die Kommandozeile kann recht lang sein,
     m&ouml;glicherweise l&auml;nger als von der Eingabeaufforderung
     oder dem Betriebssystem unterst&uuml;tzt.
     Aus diesem Grund kann die Kommandozeile aus einer Datei gelesen werden.
     <br/><br/>
     Beim Erreichen der Option <em>-f</em> &ouml;ffnet der Compiler
     die angegebene Datei und liest daraus die weitere Kommandozeile.
     Wenn das Ende der Datei erreicht wurde,
     wird der Rest der urspr&uuml;nglichen Kommandozeile weiter verarbeitet.
     Der Compiler tut also so, als ob der Inhalt der Datei anstelle
     der Option <em>-f</em> in der Kommandozeile stehen w&uuml;rde.
     <br/><br/>
     In der Datei m&uuml;ssen die einzelnen Kommandozeilenargumente
     nicht in einer Zeile stehen, sondern k&ouml;nnen auf mehrere Zeilen
     aufgeteilt werden.
     Wenn ein Kommandozeilenargument Leerzeichen enth&auml;lt,
     muss dieses in doppelte Hochkommas eingeschlossen werden,
     damit der Compiler es als ein Argument verarbeitet.
    <td/>
   </tr>
   <tr>
    <td valign="top">-g</td>
    <td>
     bei Abbruch aufgrund eines Fehlers Zeilennummer ausgeben
     (erzeugt zus&auml;tzlichen Programmcode)
    </td>
   </tr>
   <tr>
    <td valign="top" nowrap="nowrap">-o&nbsp;&lt;Ausgabedatei&gt;</td>
    <td>
     Der erzeugte Programmcode wird in die angegebene Datei geschrieben.
     Das Format der Ausgabedatei h&auml;ngt von der Endung ab
     (*.com; *.bin; *.hex; *.kcc; *.tap; *.z80).
     <br/>
     Fehlt die Option, hat die Ausgabedatei mit Ausnahme der Endung
     den gleichen Namen wie die Quelltextdatei.
     Die Endung lautet dann entweder <em>*.s</em>
     (wenn die Option&nbsp;<em>-S</em> angegeben wurde)
     oder <em>*.com</em>
     (wenn das Zielsystem <em>CPM</em> mit Anfangsadresse&nbsp;0100h ist)
     oder <em>*.bin</em> (in allen anderen F&auml;llen).
    </td>
   </tr>
   <tr>
    <td valign="top">-t&nbsp;&lt;System&gt;</td>
    <td>
     <a href="targets.htm">Zielsystem</a> festlegen,<br/>
     Diese Option muss angegeben werden.
     M&ouml;gliche Schl&uuml;sselw&ouml;rter sind:
     <ul>
      <li><tt>AC1</tt></li>
      <li><tt>CPM</tt></li>
      <li><tt>HUEBLER</tt></li>
      <li><tt>KC85</tt></li>
      <li><tt>KC85_4</tt></li>
      <li><tt>KRAMER</tt></li>
      <li><tt>LLC2_HIRES</tt></li>
      <li><tt>SCCH</tt></li>
      <li><tt>Z1013</tt></li>
      <li><tt>Z1013_64X16</tt></li>
      <li><tt>Z9001</tt></li>
      <li><tt>Z9001_KRT</tt></li>
     </ul>
     Die Schl&uuml;sselw&ouml;rter k&ouml;nnen gro&szlig; oder klein
     geschrieben werden.
    </td>
   </tr>
   <tr>
    <td valign="top">
     -A&nbsp;&lt;Anfangsadresse&gt;<br/>
     -A&nbsp;&lt;Anfangsadresse&gt;:&lt;BSS-Adresse&gt
    </td>
    <td>
     Anfangsadresse f&uuml;r den Programmcode und ggf. auch f&uuml;r
     den BSS-Bereich (Block Storage Segment: Variablen, Speicherzellen, Stack)
     festlegen (hexadezimal),<br/>
     Fehlt die Option, gilt abh&auml;ngig vom Zielsystem
     folgende Anfangsadresse:
     <ul>
      <li>0100h bei CPM, HUEBLER, Z1013 und Z1013_64X16</li>
      <li>0300h bei KC85, KC85_4, Z9001 und Z9001_KRT</li>
      <li>1000h bei KRAMER</li>
      <li>2000h bei SCCH und LLC2_HIRES</li>
     </ul>
     Wird die BSS-Adresse nicht angegeben, liegen die Variablen,
     die Speicherzellen und,
     sofern ein eigener Stack verwendet wird auch dieser,
     direkt hinter dem Programmcode.
    </td>
   </tr>
   <tr>
    <td valign="top">-D&nbsp;&lt;Treiberliste&gt;</td>
    <td>
     Die Option gibt an, welche Treiber in das compilierte Programm
     eingebunden werden sollen.
     Dazu werden die Treiber mit Komma getrennt hinter der Option angegeben.
     Die Treiberliste kann auch in Doppelhochkommas eingeschlossen werden.
     <br/><br/>
     Beispiele:<br/>
     &nbsp;<tt>-D vdip</tt><br/>
     &nbsp;<tt>-D crt,lpt</tt><br/>
     &nbsp;<tt>-D "CRT,LPT"</tt><br/>
     <br/>
     Folgende Treiber stehen zur Verf&uuml;gung:
     <em>CRT</em>, <em>FILE</em>, <em>LPT</em>, <em>VDIP</em>
     <br/>
     Die Gro&szlig;/Kleinschreibung der Treibernamen spielt keine Rolle.
     <br/><br/>
     Wird ein Treiber angegeben obwohl das BASIC-Programm gar
     keine Anweisung oder Funktion enth&auml;lt,
     die den Treiber verwenden k&ouml;nnte
     (CRT, FILE, LPT und VDIP werden z.B. nur von
     <a href="instructions.htm#open">OPEN</a> verwendet),
     wird der Treiber nicht eingebunden.
     <br/><br/>
     Wird die Option <tt>-D</tt> nicht angegeben,
     werden alle sinnvollen Treiber eingebunden.
    </td>
   </tr>
   <tr>
    <td valign="top">-L&nbsp;&lt;Sprache&gt;</td>
    <td>
     Sprache der Laufzeitauschriften (z.B. Fehlermeldungen) festlegen,<br/>
     Die Sprache wird in Form des zweistelligen ISO-Codes angegeben,
     wobei die Gro&szlig;-/Kleinschreibung egal ist.
     M&ouml;gliche Sprachen sind <em>de</em> (Deutsch)
     und <em>en</em> (Englisch).
     Fehlt die Option, erscheinen Laufzeitauschriften in Deutsch.
    </td>
   </tr>
   <tr>
    <td valign="top">-M&nbsp;&lt;Zahl&gt;</td>
    <td>
     Stack-Gr&ouml;&szlig;e festlegen,<br/>
     Bei einer Stack-Gr&ouml;&szlig;e&nbsp;0 wird der System-Stack verwendet
     und somit kein eigener Stack-Bereich angelegt.
    </td>
   </tr>
   <tr>
    <td valign="top">-N&nbsp;&lt;Name&gt;</td>
    <td>
     Programmname festlegen,<br/>
     Mit diesem Namen wird das Programm auf dem Zielsystem gestartet
     (nur relevant bei KC85, HUEBLER, Z9001 und Z9001_KRT).
    </td>
   </tr>
   <tr>
    <td valign="top">-B...</td>
    <td>
     Abbruchm&ouml;glichkeit festlegen:<br/>
     <table border="1">
      <tr><th>Option</th><th>Bedeutung</th></tr>
      <tr>
       <td valign="top"><tt>-B0</tt></td>
       <td>CTRL-C bricht Programm nicht ab</td>
      </tr>
      <tr>
       <td valign="top"><tt>-B1</tt></td>
       <td>CTRL-C bricht Programm nur bei Eingaben ab</td>
      </tr>
      <tr>
       <td valign="top"><tt>-B2</tt></td>
       <td>CTRL-C bricht Programm ab</td>
      </tr>
     </table>
     <br/>
     Fehlt die Option, wird automatisch <em>-B2</em> angenommen,
     <br/><br/>
     <b>Achtung!</b> Bei der Option <em>-B2</em> wird das Programm
     aufgrund der st&auml;ndigen Tastaturabfragen entsprechend langsamer!
    </td>
   </tr>
   <tr>
    <td valign="top">-O...</td>
    <td>
     Programmcodeoptimierung festlegen:<br/>
     <table border="1">
      <tr><th>Option</th><th>Bedeutung</th></tr>
      <tr>
       <td valign="top"><tt>-O1</tt></td>
       <td>Stack-Pr&uuml;fungen ausschalten</td>
      </tr>
      <tr>
       <td valign="top"><tt>-O2</tt></td>
       <td>zus&auml;tzlich Feldpr&uuml;fungen ausschalten</td>
      </tr>
      <tr>
       <td valign="top"><tt>-O3</tt></td>
       <td>zus&auml;tzlich relative Spr&uuml;nge bevorzugen</td>
      </tr>
     </table>
     <br/>
     Die Option <tt>-O</tt> hat die gleiche Wirkung wie <tt>-O2</tt>.<br/>
     Wurde keine Option zur Programmcodeoptimierung angegeben,
     sind alle Laufzeitpr&uuml;fungen aktiv (identisch mit <em>-O0</em>).
    </td>
   </tr>
   <tr>
    <td valign="top">-S</td>
    <td>
     nur Assembler-Quelltext ausgeben,<br/>
     Die Ausgabedatei hat in dem Fall immer das Format
     einer einfachen Textdatei, unabh&auml;ngig von ihrer Endung.
    </td>
   </tr>
   <tr>
    <td valign="top">-W&nbsp;&lt;Schl&uuml;sselwort&gt;</td>
    <td>
     Warnungen festlegen, die der Compiler ausgeben soll,<br/>
     Folgende Schl&uuml;sselw&ouml;rter sind m&ouml;glich:<br/>
     <table border="1">
      <tr><th>Schl&uuml;sselwort</th><th>Bedeutung</th></tr>
      <tr>
       <td valign="top"><tt>ALL</tt></td>
       <td>Alle Warnungen aktivieren</td>
      </tr>
      <tr>
       <td valign="top"><tt>NONASCII</tt></td>
       <td>Bei Nicht-ASCII-Zeichen warnen</td>
      </tr>
      <tr>
       <td valign="top"><tt>UNUSED</tt></td>
       <td>
        Bei nicht verwendeten Funktionen, Prozeduren und Variablen warnen
       </td>
      </tr>
      <tr>
       <td valign="top"><tt>NONE</tt></td>
       <td>Keine Warnungen ausgeben</td>
      </tr>
     </table>
    </td>
   </tr>
  </table>
 <br/>
</body>
</html>

