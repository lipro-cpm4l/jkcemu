<html>
<body>
 <h1><a href="../basicc.htm">BASIC-Compiler</a></h1>

 <h2>Zielsysteme</h2>
  Der BASIC-Compiler kann Programmcode f&uuml;r verschiedene Systeme
  erzeugen.
  Mehrere Systeme, die miteinander verwandt sind
  und auf denen der gleiche Programmcode lauff&auml;hig ist,
  werden zu einer Gruppe zusammengefasst.
  Diese Gruppe bildet ein Zielsystem.
  Programme, die f&uuml;r ein bestimmtes Zielsystem compiliert werden,
  sind somit auf allen Computern lauff&auml;hig,
  die dem angegebenen Zielsystem entsprechen.
 <br/><br/>
  Das Zielsystem muss in den <a href="options.htm">Compiler-Optionen</a>
  ausgew&auml;hlt bzw.angegeben werden.
  Damit wei&szlig; der Compiler, was f&uuml;r Programmcode
  erzeugt werden soll.
  Folgende Zielsysteme werden unterst&uuml;tzt:
  <ul>
   <li>
    <a href="targets.htm#ac1">AC1-2010, AC1-SCCH mit optionaler Farbgrafikkarte</a>
   </li>
   <li><a href="targets.htm#cpm">CP/M-kompatibel</a></li>
   <li><a href="targets.htm#huebler">H&uuml;bler-Grafik-MC</a></li>
   <li><a href="targets.htm#kramer">Kramer-MC</a></li>
   <li><a href="targets.htm#llc2">LLC2 mit HIRES-Grafik</a></li>
   <li><a href="targets.htm#z9001">KC85/1, KC87, Z9001</a></li>
   <li>
    <a href="targets.htm#z9001krt">KC85/1, KC87, Z9001 mit KRT-Grafik</a>
   </li>
   <li><a href="targets.htm#kc85">KC85/2..5, HC900</a></li>
   <li><a href="targets.htm#kc85_4">KC85/4..5 mit Unterst&uuml;tzung beider Bildspeicher</a></li>
   <li><a href="targets.htm#scch">SCCH (AC1-2010, AC1-SCCH, LLC2)</a></li>
   <li><a href="targets.htm#z1013">Z1013</a></li>
   <li>
    <a href="targets.htm#z1013_64x16">Z1013 mit Unterst&uuml;tzung des 64x16-Bildschirmformats</a>
   </li>
  </ul>
 <br/>
  Am Ende der Seite finden Sie ein
  <a href="targets.htm#summary">tabellarische Zusammenfassung</a>
  der Zielsysteme.
 <br/><br/>
  Nicht alle BASIC-Funktionalit&auml;ten lassen sich auf allen Zielsystemen
  umsetzen. Insbesondere bei den Grafik- und Cursor-Funktionalit&auml;ten
  gibt es Einschr&auml;nkungen.
  Aus diesem Grund finden Sie hier Hinweise zu den konkreten Umsetzungen
  und damit verbunden auch zu den gegebenen Einschr&auml;nkungen.
 <br/><br/>

 <h3><a name="ac1">AC1-2010, AC1-SCCH mit optionaler Farbgrafikkarte</a></h3>
  Bei diesem Zielsystem wird Programmcode mit Farbunterst&uuml;tzung
  f&uuml;r einen AC1-2010 und AC1-SCCH erzeugt.
  Mit Farbunterst&uuml;tzung ist gemeint, dass bei allen Ausgaben
  auf dem Bildschirm neben dem Bildwiederholspeicher auch der Farbspeicher
  beschrieben wird.
  Das compilierte Programm ist aber auch auf einem AC1 ohne Farbgrafikkarte
  lauff&auml;hig.
  Einzig die <a href="functions.htm#point">POINT</a>-Funktion
  zum Ermitteln der Farbe eines Pixels w&uuml;rde in dem Fall
  falsche Werte liefern.
 <br/><br/>
  Die AC1-Monitorprogramme unterst&uuml;tzen standardm&auml;&szlig;ig
  keine Farben.
  Aus diesem Grund muss das das compilierte Programm selbst tun.
  Dazu pr&uuml;ft der Compiler, ob im BASIC-Programm Anweisungen
  zum Setzen der Farbe vorkommen.
  Wenn ja, werden Textausgaben auf dem Bildschirm nicht &uuml;ber
  die entsprechende Systemfunktion get&auml;tigt,
  sondern &uuml;ber eine im compilierten Programm enthaltene
  eigene Bildschirmansteuerung, die dann eben auch den Farbspeicher bedient.
  Diese eigene Bildschirmansteuerung unterst&uuml;tzt nicht
  alle Steuercodes der Systemroutine, sondern nur die wichtigsten:
 <br/><br/>
  <table border="1">
   <tr><th>Steuercode</th><th>Bedeutung</th></tr>
   <tr><td>08h</td><td nowrap="nowrap">Cursor links</td></tr>
   <tr><td>09h</td><td nowrap="nowrap">Cursor rechts</td></tr>
   <tr><td>0Ah</td><td nowrap="nowrap">Cursor runter</td></tr>
   <tr><td>0Bh</td><td nowrap="nowrap">Cursor hoch</td></tr>
   <tr><td>0Ch</td><td nowrap="nowrap">Bildschirm l&ouml;schen</td></tr>
   <tr>
    <td>0Dh</td>
    <td nowrap="nowrap">Cursor an den Anfang der n&auml;chsten Zeile</td>
   </tr>
  </table>
 <br/>
  Andere Steuercodes, insbesondere die von der Systemroutine
  her bekannten Escape-Sequenzen, werden nicht unterst&uuml;tzt.
 <br/><br/>
  Die eigene Bildschirmansteuerung benutzt zur Cursor-Positionierung
  die gleichen Systemzellen wie die SCCH-Monitorprogramme,
  n&auml;mlich 1800h/1801h f&uuml;r die Cursor-Adresse
  und 1846h f&uuml;r das Zeichen unter dem Cursor.
  Damit ist sichergestellt, dass bei Programmstart und -ende der Cursor
  nicht springt.
 <br/><br/>
  Wenn im BASIC-Programm keine Anweisungen zum Setzen der Farbe vorkommen,
  enth&auml;lt das compilierte Programm auch keine Funktionen
  zum Beschreiben des Farbspeichers.
  In dem Fall beschreiben die Grafikfunktionen
  (simulierte Vollgrafik, siehe weiter unten) nur den Bildwiederholspeicher,
  und f&uuml;r Textausgaben wird die Systemfunktion des Monitorprogramms
  benutzt.
 <br/><br/>
  Im <tt>SCREEN&nbsp;0</tt> wird eine Vollgrafik mit 128x64 Pixel simuliert,
  die mit den Grafikfunktionen angesprochen werden kann.
  Voraussetzung daf&uuml;r ist, dass im Zeichengenerator
  im Bereich 00h bis 0Fh die entsprechenden Grafikzeichen vorhanden sind.
  Das ist beim ACC-, SCCH- und AC1-2010-Zeichensatz der Fall.
 <br/><br/>
  Bei der simulierten Vollgrafik wird jede Zeichenposition auf dem Bildschirm
  in vier Grafikpixel aufgeteilt.
  Da ein Zeichen 8x6&nbsp;Bildschimpixel hat,
  ist ein simuliertes Grafikpixel 4x3&nbsp;Bildschirmpixel
  gro&szlig;, d.h., ein Grafikpixel ist nicht quadratisch.
  Dadurch sehen auf dem Bildschirm gemalte Kreise wie Ellipsen
  und Quadrate wie Rechtecke aus.
 <br/><br/>
  Der erzeugte Programmcode ist auch auf einem AC1
  mit Monitorprogramm&nbsp;3.1 lauff&auml;hig,
  wenn ein 2&nbsp;KByte gro&szlig;en Bildwiederholspeicher vorhanden ist
  (64x32&nbsp;Zeichen) und auf Druckerausgaben sowie die JOYST-Funktion
  verzichtet wird.
 <br/><br/>
  Eigenschaften des Zielsystems im Detail:
 <br/>
  <ul>
   <li>
    Es wird ein einstelliger Applikationsname unterst&uuml;tzt,
    d.h., wenn im Namensfeld nur ein Zeichen steht,
    wird ein entsprechender Kommandorahmen erzeugt,
    und das compilierte Programm kann &uuml;ber dieses Zeichen
    aufgerufen werden.
   </li>
   <li>
    Es wird im <tt>SCREEN&nbsp;0</tt> eine Vollgrafik
    mit 128x64&nbsp;Pixel simuliert,
    die mit den Grafikbefehlen angesprochen werden kann.
   </li>
   <li>Die CURSOR-Anweisung hat keine Wirkung.</li>
   <li>
    Die PAUSE-Anweisung ist auf die Standard-Taktfrequenz des AC1
    (2&nbsp;MHz) abgestimmt.
   </li>
   <li>
    Die JOYST-Funktion unterst&uuml;tzt einen Joystick und ruft dazu
    die Systemfunktion auf Adresse&nbsp;0EB4h auf.
   </li>
   <li>
    Ein VDIP-Modul wird an den E/A-Basisadressen&nbsp;DCh, FCh
    und 08h (PIO2) unterst&uuml;tzt, d.h., es wird zuerst versucht,
    das VDIP-Modul an der Basisadresse&nbsp;DCh zu initialisieren.
    Wenn das nicht gelingt, ist die Basisadresse&nbsp;FCh und danach 08h
    an der Reihe.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_AC1</a>
   </li>
   <li>
    Das Zielsystem ist vom Zielsystem
    <a href="targets.htm#scch">SCCH (AC1-2010, AC1-SCCH, LLC2)</a>
    abgeleitet, d.h.,
    die Funktion <a href="functions.htm#is_target">IS_TARGET</a>
    liefert auch bei <a href="constants.htm#target">TARGET_SCCH</a> TRUE.
   </li>
  </ul>
 <br/>

 <h3><a name="cpm">CP/M-kompatibel</a></h3>
  <ul>
   <li>Die Grafikbefehle stehen nicht zur Verf&uuml;gung.</li>
   <li>Die CURSOR-Anweisung hat keine Wirkung.</li>
   <li>Die JOYST-Funktion liefert immer&nbsp;0.</li>
   <li>
    Ein VDIP-Modul wird an der E/A-Basisadresse&nbsp;FCh unterst&uuml;tzt.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_CPM</a>
   </li>
  </ul>
 <br/>

 <h3><a name="huebler">H&uuml;bler-Grafik-MC</a></h3>
  <ul>
   <li>
    Die Grafikanweisungen greifen direkt auf den Bildwiederholspeicher zu.
    Dieser muss dazu auf die Standardadresse C000h eingestellt sein.
   </li>
   <li>Die JOYST-Funktion liefert immer&nbsp;0.</li>
   <li>
    Ein VDIP-Modul wird an der E/A-Basisadresse&nbsp;FCh unterst&uuml;tzt.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_HUEBLER</a>
   </li>
  </ul>
 <br/>
  <b>Achtung!</b> F&uuml;r den H&uuml;bler-Grafik-MC compilierte Programme
  sind auch auf dem H&uuml;bler/Evert-MC lauff&auml;hig,
  wenn auf die Grafikfunktionalit&auml;ten und
  auf die <em>INKEY</em>-Funktion verzichtet sowie das Programm
  nicht mit der Option <em>CTRL-C bricht Programm immer ab</em>
  compiliert wird.
 <br/><br/>


 <h3><a name="kramer">Kramer-MC</a></h3>
  <ul>
   <li>Die Grafikbefehle stehen nicht zur Verf&uuml;gung.</li>
   <li>Die CURSOR-Anweisung hat keine Wirkung.</li>
   <li>Die LOCATE-Anweisung steht nicht zur Verf&uuml;gung.</li>
   <li>
    Das im JKCEMU integrierte Monitorprogramm des Kramer-MC erkennt
    bei der INKEY-Funktion nur die Tastenkombination <em>CTRL-C</em>.
   </li>
   <li>
    Druckerausgaben werden &uuml;ber den LIST-Kanal
    (Einsprungsadresse&nbsp;00ECh) get&auml;tigt.
    Das im JKCEMU enthaltene Monitorprogramm des Kramer-MC
    ist standardm&auml;&szlig;ig jedoch so eingestellt,
    dass der LIST-Kanal und damit die Druckerausgaben
    auf dem Bildschirm erscheinen.
   </li>
   <li>Die JOYST-Funktion liefert immer&nbsp;0.</li>
   <li>Es wird kein VDIP-Modul unterst&uuml;tzt.</li>
   <li>
    Sie d&uuml;rfen die Compiler-Option <em>System-Stack verwenden</em>
    nicht einschalten, da beim Starten eines Maschinencodeprogramms
    mit dem Kommando <tt>G&lt;Adresse&gt;</tt> der Stack-Pointer
    den Wert&nbsp;0000 hat und somit in den Bildwiederholspeicher
    hineinlaufen w&uuml;rde.
    Compilieren Sie immer mit der Option <em>Eigener Stack-Bereich</em>.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_KRAMER</a>
   </li>
  </ul>
 <br/>

 <h3><a name="llc2">LLC2 mit HIRES-Grafik</a></h3>
  <ul>
   <li>
    Es wird ein einstelliger Applikationsname unterst&uuml;tzt,
    d.h., wenn im Namensfeld nur ein Zeichen steht,
    wird ein entsprechender Kommandorahmen erzeugt,
    und das compilierte Programm kann &uuml;ber dieses Zeichen
    aufgerufen werden.
   </li>
   <li>
    <tt>SCREEN&nbsp;0</tt> ist ein reiner Textbildschirm,
    in dem die Grafikbefehle nicht verwendet werden k&ouml;nnen.
   </li>
   <li>
    Die HIRES-Vollgrafikerweiterung mit 512x256&nbsp;Pixel steht im
    <tt>SCREEN&nbsp;1</tt> zur Verf&uuml;gung,
    d.h., hier k&ouml;nnen die Grafikbefehle angewendet werden.
    Textausgaben, die mit anderen als der
    <a href="instructions.htm#label">LABEL</a>-Anweisung get&auml;tigt werden,
    gehen in <tt>SCREEN&nbsp;0</tt>,
    der allerdings in dem Augenblick nicht sichtbar ist.
    Im <tt>SCREEN&nbsp;1</tt> liegt der Bildwiederholspeicher
    auf Adresse&nbsp;8000h und belegt damit einen anderen Bereich
    als der im <tt>SCREEN&nbsp;0</tt>.
   </li>
   <li>Die CURSOR-Anweisung hat keine Wirkung.</li>
   <li>
    Die JOYST-Funktion unterst&uuml;tzt einen Joystick und ruft dazu
    die Systemfunktion auf Adresse&nbsp;0EB4h auf.
   </li>
   <li>
    Ein VDIP-Modul wird an den E/A-Basisadressen&nbsp;DCh, FCh
    und E4h (PIO2) unterst&uuml;tzt, d.h., es wird zuerst versucht,
    das VDIP-Modul an der Basisadresse&nbsp;DCh zu initialisieren.
    Wenn das nicht gelingt, ist die Basisadresse&nbsp;FCh und danach E4h
    an der Reihe.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_LLC2</a>
   </li>
   <li>
    Das Zielsystem ist vom Zielsystem
    <a href="targets.htm#scch">SCCH (AC1-2010, AC1-SCCH, LLC2)</a>
    abgeleitet, d.h.,
    die Funktion <a href="functions.htm#is_target">IS_TARGET</a>
    liefert auch bei <a href="constants.htm#target">TARGET_SCCH</a> TRUE.
   </li>
  </ul>
 <br/>

 <h3><a name="z9001">KC85/1, KC87, Z9001</a></h3>
  <ul>
   <li>
    Im <tt>SCREEN&nbsp;0</tt> wird mit Hilfe der Blockgrafik
    eine Vollgrafik mit 80x48&nbsp;Pixel simuliert,
    die mit den Grafikbefehlen angesprochen werden kann.
   </li>
   <li>
    Werden im BASIC-Programm die Anweisungen BORDER, COLOR, INK oder PAPER
    verwendet, wird Programmcode mit Farbunterst&uuml;tzung erzeugt,
    d.h., in dem Fall wird bei jeder Pixel setzenden Grafikanweisung
    zus&auml;tzlich auch der Farbspeicher beschrieben.
    Kommen dagegen keine Anweisungen zum Setzen der Farbe vor,
    wird Programmcode erzeugt, der nicht auf den Farbspeicher zugreift.
   </li>
   <li>
    Ein VDIP-Modul wird an der E/A-Basisadresse&nbsp;DCh unterst&uuml;tzt.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_Z9001</a>
   </li>
  </ul>
 <br/>

 <h3><a name="z9001krt">KC85/1, KC87, Z9001 mit KRT-Grafik</a></h3>
  <ul>
   <li>
    <tt>SCREEN&nbsp;0</tt> ist ein reiner Textbildschirm.
    Eine Vollgrafik wird nicht simuliert, d.h.,
    die Grafikbefehle k&ouml;nnen hier nicht verwendet werden.
   </li>
   <li>
    Die KRT-Vollgrafik mit 320x192&nbsp;Pixel steht im
    <tt>SCREEN&nbsp;1</tt> zur Verf&uuml;gung,
    d.h., hier k&ouml;nnen die Grafikbefehle angewendet werden.
    Textausgaben sind allerdings nicht m&ouml;glich (au&szlig;er
    mit der <a href="instructions.htm#label">LABEL</a>-Anweisung).
   </li>
   <li>
    Bez&uuml;glich Farbunterst&uuml;tzung und VDIP gilt das gleiche
    wie beim Zielsystem <em>KC85/1, KC87, Z9001</em>.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_Z9001_KRT</a>
   </li>
   <li>
    Das Zielsystem ist vom Zielsystem
    <a href="targets.htm#z9001">KC85/1, KC87, Z9001</a> abgeleitet, d.h.,
    die Funktion <a href="functions.htm#is_target">IS_TARGET</a>
    liefert auch bei <a href="constants.htm#target">TARGET_Z9001</a> TRUE.
   </li>
  </ul>
 <br/>

 <h3><a name="kc85">KC85/2..5, HC900</a></h3>
  Dieses Zielsystem erzeugt Programmcode, der auf allen
  M&uuml;hlh&auml;user&nbsp;KCs lauff&auml;hig ist,
  also vom HC900 bis zum KC85/5.
 <br/><br/>
  Eigenschaften des Zielsystems im Detail:
  <ul>
   <li>
    Tastaturein- und Bildschirmausgaben erfolgen &uuml;ber den
    jeweiligen Standardkanal,
    d.h., die Ein- und Ausgabe kann im CAOS umgeleitet werden.
    Das gilt jedoch nicht f&uuml;r die INKEY$-Funktion.
    Diese greift auch dann auf die Tastatur zu,
    wenn die Tastatureingabe umgeleitet wurde.
   </li>
   <li>
    Ausgaben auf dem Drucker werden auf dem User-Kanal&nbsp;2 get&auml;tigt.
   </li>
   <li>
    Die LOCATE-Anweisung bezieht sich auf das im CAOS eingestellte Fenster.
   </li>
   <li>
    Beim HC900 und beim KC85/2 ist standardm&auml;&szlig;ig
    das aktuelle Fenster kleiner eingestellt als maximal m&ouml;glich.
    Die CLS-Anweisung l&ouml;scht in dem Fall nicht den ganzen Bildschirm.
    Da das unsch&ouml;n aussieht, pr&uuml;ft der Compiler,
    ob im Programm CLS-Anweisungen vorkommen.
    Wenn ja, wird bei Programmstart die Gr&ouml;&szlig;e
    des aktuell im CAOS eingestellten Fensters gepr&uuml;ft
    und dieses gegebenfalls maximiert.
   </li>
   <li>
    Die CURSOR-Anweisung hat keine Wirkung.
    CAOS schaltet den Cursor automatisch ein und aus,
    je nachdem, ob gerade auf eine Eingabe gewartet wird oder nicht.
   </li>
   <li>
    Die JOYST-Funktion fragt direkt das Joystick-Modul (M008 bzw. M021) ab,
    d.h., es muss kein spezieller Joystick-Treiber geladen werden.
    Das compilierte Programm initialisiert dazu beim Start
    die entsprechende PIO im Joystick-Modul, allerdings nur,
    wenn im BASIC-Programm auch ein JOYST-Aufruf vorkommt.
    Die Joystick-PIO wird dabei auf die gleiche Betriebsart programmiert,
    wie es auch der Joystick-Treiber im CAOS&nbsp;4.5 tut.
    Dieser wird dadurch nicht beeintr&auml;chtigt.
   </li>
   <li>
    VDIP wird &uuml;ber das Modul&nbsp;M052 unterst&uuml;tzt.
    Das compilierte Programm aktiviert dazu das Modul selbstst&auml;ndig,
    d.h., es kann, muss aber nicht vor dem Programmstart schon aktiv sein.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_KC85</a>
   </li>
  </ul>
 <br/>

 <h3>
  <a name="kc85_4">KC85/4..5 mit Unterst&uuml;tzung beider Bildspeicher</a>
 </h3>
  Dieses Zielsystem ist speziell auf die Hardware des KC85/4 und KC85/5
  zugeschnitten und erm&ouml;glicht somit beide Bildspeicher zu nutzen.
  Au&szlig;erdem wurden die Grafikroutinen auf die spezielle Hardware
  optimiert, so dass diese noch etwas schneller sind als beim
  weiter oben beschriebenen allgemeinen KC85/2..5-Zielsystem.
 <br/><br/>
  Das Zielsystem <em>KC85/4..5</em> stellt die beiden
  <a href="instructions.htm#screen">SCREEN</a>s&nbsp;0 und 1 bereit,
  die die beiden Bildspeicher (IRM-B&auml;nke)&nbsp;0 und 1
  repr&auml;sentieren.
  F&uuml;r jeden Bildspeicher, d.h. f&uuml;r jeden SCREEN,
  wird der Cursor separat verwaltet.
  Man kann deshalb durch Umschalten des SCREENs auf beiden Bildspeichern
  Text ausgeben, ohne das das eine Auswirkung auf den jeweils anderen
  Bildspeicher hat.
 <br/><br/>
  Eigenschaften des Zielsystems im Detail:
  <ul>
   <li>
    <tt>SCREEN&nbsp;0</tt> erm&ouml;glicht die Ausgabe von Text und Grafik
    unter Nutzung der IRM-Bank&nbsp;0.
   </li>
   <li>
    <tt>SCREEN&nbsp;1</tt> erm&ouml;glicht die Ausgabe von Text und Grafik
    unter Nutzung der IRM-Bank&nbsp;1.
   </li>
   <li>
    F&uuml;r jeden SCREEN wird ein eigenes CAOS-Fenster verwendet,
    so dass jeder SCREEN auch eine eigene Cursor-Verwaltung hat.
   </li>
   <li>
    alles weitere wie beim Zielsystem
    <a href="targets.htm#kc85">KC85/2..5, HC900</a>
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_KC85_4</a>
   </li>
   <li>
    Das Zielsystem ist vom Zielsystem
    <a href="targets.htm#kc85">KC85/2..5, HC900</a> abgeleitet, d.h.,
    die Funktion <a href="functions.htm#is_target">IS_TARGET</a>
    liefert auch bei <a href="constants.htm#target">TARGET_KC84</a> TRUE.
   </li>
  </ul>
 <br/>

 <h3><a name="scch">SCCH (AC1-2010, AC1-SCCH, LLC2)</a></h3>
  Ist dieses Zielsystem ausgew&auml;hlt, wird Programmcode f&uuml;r
  einen AC1 bzw. LLC2 mit einem SCCH-Monitorprogramm erzeugt.
  Der Programmcode ist auch auf einem AC1 mit dem Monitorprogramm&nbsp;3.1
  lauff&auml;hig, wenn auf Druckerausgaben, die LOCATE-Anweisung und
  die JOYST-Funktion verzichtet wird.
 <br/>
  <ul>
   <li>
    Es wird ein einstelliger Applikationsname unterst&uuml;tzt,
    d.h., wenn im Namensfeld nur ein Zeichen steht,
    wird ein entsprechender Kommandorahmen erzeugt,
    und das compilierte Programm kann &uuml;ber dieses Zeichen
    aufgerufen werden.
   </li>
   <li>Die Grafikbefehle stehen nicht zur Verf&uuml;gung.</li>
   <li>Die CURSOR-Anweisung hat keine Wirkung.</li>
   <li>
    Die PAUSE-Anweisung ist auf die Standard-Taktfrequenz des AC1
    (2&nbsp;MHz) abgestimmt.
    Auf einem LLC2 ist aufgrund der h&ouml;heren Taktfrequenz
    die Wartezeit entsprechend k&uuml;rzer.
   </li>
   <li>
    Die JOYST-Funktion unterst&uuml;tzt einen Joystick und ruft dazu
    die Systemfunktion auf Adresse&nbsp;0EB4h auf.
   </li>
   <li>
    Ein VDIP-Modul wird an den E/A-Basisadressen&nbsp;DCh und FCh
    unterst&uuml;tzt, d.h., es wird zuerst versucht,
    das VDIP-Modul an der Basisadresse&nbsp;DCh zu initialisieren.
    Wenn das nicht gelingt, ist die Basisadresse&nbsp;FCh an der Reihe.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_SCCH</a>
   </li>
  </ul>
 <br/>

 <h3><a name="z1013">Z1013</a></h3>
  <ul>
   <li>
    Es wird im <tt>SCREEN&nbsp;0</tt> eine Vollgrafik mit 64x64&nbsp;Pixel
    simuliert, die mit den Grafikbefehlen angesprochen werden kann.
   </li>
   <li>
    Die Funktion <em>JOYST</em> ruft den Sprungverteiler auf, aber nur,
    wenn auf der Adresse&nbsp;FFBBh (Einsprung zur Joystick-Abfrage)
    ein Sprungbefehl (Byte&nbsp;C3h) steht.
    Dies ist ein Schutz, damit das compilierte Programm nicht abst&uuml;rzt,
    falls der Sprungverteiler nicht initialisiert sein sollte.
   </li>
   <li>
    Druckerausgaben erfolgen &uuml;ber den Sprungverteiler,
    aber nur, wenn auf Adresse&nbsp;FFE8h
    (Routine zur Ausgabe des Zeichens im Register&nbsp;A)
    ein absoluter Sprung steht (Byte&nbsp;C3h).
   </li>
   <li>
    Die Option <em>CTRL-C bricht Programm immer ab</em> verlangsamt
    das Programm erheblich. Der Grund liegt in der langsamen INKEY-Routine
    des Z1013-Monitorprogramms, die f&uuml;r den Test auf Abbruch
    regelm&auml;&szlig;ig aufgerufen wird.
   </li>
   <li>
    Ein VDIP-Modul wird an der E/A-Basisadresse&nbsp;DCh und FCh
    unterst&uuml;tzt, d.h., es wird zuerst versucht,
    das VDIP-Modul an der Basisadresse&nbsp;DCh zu initialisieren.
    Wenn das nicht gelingt, ist die Basisadresse&nbsp;FCh an der Reihe.
   </li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_Z1013</a>
   </li>
  </ul>
 <br/>

 <h3>
  <a name="z1013_64x16">Z1013 mit Unterst&uuml;tzung des 64x16-Bildschirmformats</a>
 </h3>
  Dieses Zielsystem ist eine Erweiterung vom Zielsystem <em>Z1013</em>.
  Der einzige Unterschied besteht darin,
  dass es zus&auml;tzlich den <tt>SCREEN&nbsp;1</tt> gibt,
  im dem der 64x16-Zeichen-Modus der Peters-Platine zur Verf&uuml;gung steht.
  Da die Z1013-Monitorprogramme dieses Bildschirmformat
  nicht unterst&uuml;tzen,
  erfolgt im <tt>SCREEN&nbsp;1</tt> die Bildschirmausgabe &uuml;ber
  eine eigene, im compilierten Programm enthaltene Bildschirmansteuerung.
  Diese unterst&uuml;tzt die gleichen Steuercodes und verwendet auch
  die gleichen Systemzellen wie die originale Routine im Monitorprogramm.
 <br/><br/>
  Eigenschaften des Zielsystems im Detail:
 <br/>
  <ul>
   <li>
    <tt>SCREEN&nbsp;1</tt> ist ein reiner Textbildschirm mit 64x16 Zeichen.
   </li>
   <li>Alles andere gilt entsprechend dem Zielsystem <em>Z1013</em>.</li>
   <li>
    Konstante f&uuml;r das Zielsystem ist:
    <a href="constants.htm#target">TARGET_Z1013_64X16</a>
   </li>
   <li>
    Das Zielsystem ist vom Zielsystem
    <a href="targets.htm#z1013">Z1013</a> abgeleitet, d.h.,
    die Funktion <a href="functions.htm#is_target">IS_TARGET</a>
    liefert auch bei <a href="constants.htm#target">TARGET_Z1013</a> TRUE.
   </li>
  </ul>
 <br/>

 <h3><a name="summary">Zusammenfassung</a></h3>
  Die Tabelle zeigt anhand der zugeh&ouml;rigen
  <a href="constants.htm#target">Konstante</a>
  alle Zielsysteme und fasst die wesentlichsten Eigenschaften zusammen:
 <br/><br/>
  <table border="1">
   <tr>
    <th>Zielsystem (Konstante)</th>
    <th>Programm ist lauff&auml;hig auf</th>
    <th>Text</th>
    <th>Grafik</th>
    <th>Farbe</th>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#ac1">TARGET_AC1</a></td>
    <td valign="top">
     AC1-2010, AC1-SCCH,<br/>
     mit Einschr&auml;nkungen auch AC1-ACC
    </td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 64x32 Zeichen</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 128x64 Pixel</td>
    <td valign="top">ja&nbsp;&sup1;)</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#cpm">TARGET_CPM</a></td>
    <td valign="top">
     CP/M-kompatible Systeme mit den von Robotron
     verwendeten Bildschirmsteuerzeichen
     (CP/A, CP/L, HR-DOS, HR-CP/M, MicroDOS, ML-DOS)
    </td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0</td>
    <td valign="top">-</td>
    <td valign="top">nein</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#huebler">TARGET_HUEBLER</a></td>
    <td valign="top">
     H&uuml;bler-Grafik-MC,<br/>
     mit Einschr&auml;nkungen auch H&uuml;bler/Evert-MC
    </td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 32x32 Zeichen</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 256x256 Pixel</td>
    <td valign="top">nein</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#kramer">TARGET_KRAMER</a></td>
    <td valign="top">Kramer-MC</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 64x16 Zeichen</td>
    <td valign="top">-</td>
    <td valign="top">nein</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#llc2">TARGET_LLC2</a></td>
    <td valign="top">LLC2 mit HiRes-Grafik</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 64x32 Zeichen</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;1: 512x256 Pixel</td>
    <td valign="top">nein</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#kc85">TARGET_KC85</a></td>
    <td valign="top">KC85/2..5, HC900</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 40x32 Zeichen</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 320x256 Pixel</td>
    <td valign="top">ja</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#kc85_4">TARGET_KC85_4</a></td>
    <td valign="top">KC85/4, KC85/5</td>
    <td valign="top" nowrap="nowrap">
     SCREEN&nbsp;0: 40x32 Zeichen<br/>
     SCREEN&nbsp;1: 40x32 Zeichen
    </td>
    <td valign="top" nowrap="nowrap">
     SCREEN&nbsp;0: 320x256 Pixel<br/>
     SCREEN&nbsp;1: 320x256 Pixel
    </td>
    <td valign="top">ja</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#scch">TARGET_SCCH</a></td>
    <td valign="top">
     AC1-2010, AC1-SCCH, LLC2<br/>
     mit Einschr&auml;nkungen auch Ur-AC1 und AC1-ACC
    </td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 64x32 Zeichen</td>
    <td valign="top">-</td>
    <td valign="top">nein</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#z1013">TARGET_Z1013</a></td>
    <td valign="top">Z1013</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 32x32 Zeichen</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 64x64 Pixel</td>
    <td valign="top">nein</td>
   </tr>
   <tr>
    <td valign="top">
     <a href="targets.htm#z1013_64x16">TARGET_Z1013_64X16</a>
    </td>
    <td valign="top">Z1013 mit Peters-Platine</td>
    <td valign="top" nowrap="nowrap">
     SCREEN&nbsp;0: 32x32 Zeichen<br/>
     SCREEN&nbsp;1: 64x16 Zeichen
    </td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 64x64 Pixel</td>
    <td valign="top">nein</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#z9001">TARGET_Z9001</a></td>
    <td valign="top">KC85/1, KC87, Z9001</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 40x24 Zeichen</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 80x48 Pixel</td>
    <td valign="top">ja&nbsp;&sup1)</td>
   </tr>
   <tr>
    <td valign="top"><a href="targets.htm#z9001krt">TARGET_Z9001_KRT</a></td>
    <td valign="top">KC85/1, KC87, Z9001 mit KRT-Grafik</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;0: 40x24 Zeichen</td>
    <td valign="top" nowrap="nowrap">SCREEN&nbsp;1: 320x192 Pixel</td>
    <td valign="top">ja&nbsp;&sup1)</td>
   </tr>
  </table>
 <br/>
  &sup1;) Ein f&uuml;r dieses Zielsystem compiliertes Programm
  ist auch auf einem Rechner ohne Farbgrafikkarte lauff&auml;hig.
 <br/>
</body>
</html>
