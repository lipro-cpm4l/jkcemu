/*
 * (c) 2013-2015 Jens Mueller
 *
 * Kleincomputer-Emulator
 *
 * Erkennung von Zeichen und des Zeichenrasters
 */

package jkcemu.emusys.kc85;

import java.lang.*;
import java.util.*;
import java.util.zip.CRC32;
import jkcemu.base.CharRaster;


public class KC85CharRecognizer
{
  public class CharRasterResult
  {
    private CharRaster charRaster;
    private float      hitRate;

    public CharRasterResult()
    {
      this.charRaster = null;
      this.hitRate    = 0F;
    }

    public CharRaster getCharRaster()
    {
      return this.charRaster;
    }

    public void offer( float hitRate, CharRaster charRaster )
    {
      if( hitRate > this.hitRate ) {
	this.charRaster = charRaster;
	this.hitRate    = hitRate;
      }
    }
  };


  // Zeichensatz CAOS 4.x inkl. Zeichen des IBM-Zeichensatzes
  private static final int[][] font8x8a = {
	// CAOS-Zeichensatz, Codes 02h bis 1Fh, nicht alle gemappt
	{ '\u21A4', 0x00, 0x00, 0x12, 0x32, 0x7E, 0x32, 0x12, 0x00 },
	{ '\u2190', 0x00, 0x10, 0x30, 0x7E, 0x30, 0x10, 0x00, 0x00 },
	{ '\u2192', 0x00, 0x08, 0x0C, 0x7E, 0x0C, 0x08, 0x00, 0x00 },
	{ '\u2193', 0x00, 0x10, 0x10, 0x10, 0x7C, 0x38, 0x10, 0x00 },
	{ '\u2191', 0x08, 0x1C, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x00 },
	{ '\u21A9', 0x00, 0x00, 0x12, 0x32, 0x7E, 0x30, 0x10, 0x00 },
	{ '\u2592', 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55 },
	{ '\u2196', 0x38, 0x30, 0x28, 0x04, 0x04, 0x04, 0x04, 0x00 },
	{ '\u25C9', 0x00, 0x3C, 0x42, 0x5A, 0x5A, 0x42, 0x3C, 0x00 },
	{ '\u21E5', 0x00, 0x01, 0x09, 0x0D, 0x7F, 0x0D, 0x09, 0x01 },
	{ '\u21E4', 0x00, 0x80, 0x90, 0xB0, 0xFE, 0xB0, 0x90, 0x80 },
	{ '\u21D2', 0x00, 0x08, 0x7C, 0x06, 0x7C, 0x08, 0x00, 0x00 },
	{ '\u2591', 0xCC, 0xCC, 0x33, 0x33, 0xCC, 0xCC, 0x33, 0x33 },
	{ '\u21D0', 0x00, 0x10, 0x3E, 0x60, 0x3E, 0x10, 0x00, 0x00 },

	// IBM-Zeichensatz, Codes 01h-1Fh
	{ '\u263A', 0x7E, 0x81, 0xA5, 0x81, 0xBD, 0x99, 0x81, 0x7E },
	{ '\u263B', 0x7E, 0xFF, 0xDB, 0xFF, 0xC3, 0xE7, 0xFF, 0x7E },
	{ '\u2665', 0x6C, 0xFE, 0xFE, 0xFE, 0x7C, 0x38, 0x10, 0x00 },
	{ '\u2666', 0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x10, 0x00 },
	{ '\u2663', 0x38, 0x7C, 0x38, 0xFE, 0xFE, 0x7C, 0x38, 0x7C },
	{ '\u2660', 0x10, 0x10, 0x38, 0x7C, 0xFE, 0x7C, 0x38, 0x7C },
	{ '\u2022', 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00 },
	{ '\u25D8', 0xFF, 0xFF, 0xE7, 0xC3, 0xC3, 0xE7, 0xFF, 0xFF },
	{ '\u25CB', 0x00, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x3C, 0x00 },
	{ '\u25D9', 0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF },
	{ '\u2642', 0x0F, 0x07, 0x0F, 0x7D, 0xCC, 0xCC, 0xCC, 0x78 },
	{ '\u2640', 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x7E, 0x18 },
	{ '\u266A', 0x3F, 0x33, 0x3F, 0x30, 0x30, 0x70, 0xF0, 0xE0 },
	{ '\u266B', 0x7F, 0x63, 0x7F, 0x63, 0x63, 0x67, 0xE6, 0xC0 },
	{ '\u263C', 0x99, 0x5A, 0x3C, 0xE7, 0xE7, 0x3C, 0x5A, 0x99 },
	{ '\u25BA', 0x80, 0xE0, 0xF8, 0xFE, 0xF8, 0xE0, 0x80, 0x00 },
	{ '\u25C4', 0x02, 0x0E, 0x3E, 0xFE, 0x3E, 0x0E, 0x02, 0x00 },
	{ '\u2195', 0x18, 0x3C, 0x7E, 0x18, 0x18, 0x7E, 0x3C, 0x18 },
	{ '\u203C', 0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00 },
	{ '\u00B6', 0x7B, 0xDB, 0xDB, 0x7B, 0x1B, 0x1B, 0x1B, 0x00 },
	{ '\u00A7', 0x3C, 0x66, 0x38, 0x6C, 0x6C, 0x38, 0xCC, 0x78 },
	{ '\u25AC', 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x00 },
	{ '\u21A8', 0x18, 0x3C, 0x7E, 0x18, 0x7E, 0x3C, 0x18, 0xFF },
	{ '\u2191', 0x18, 0x3C, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x00 },
	{ '\u2193', 0x18, 0x18, 0x18, 0x18, 0x7E, 0x3C, 0x18, 0x00 },
	{ '\u2192', 0x00, 0x18, 0x0C, 0xFE, 0x0C, 0x18, 0x00, 0x00 },
	{ '\u2190', 0x00, 0x30, 0x60, 0xFE, 0x60, 0x30, 0x00, 0x00 },
	{ '\u221F', 0x00, 0x00, 0xC0, 0xC0, 0xC0, 0xFE, 0x00, 0x00 },
	{ '\u2194', 0x00, 0x24, 0x66, 0xFF, 0x66, 0x24, 0x00, 0x00 },
	{ '\u25B2', 0x00, 0x18, 0x3C, 0x7E, 0xFF, 0xFF, 0x00, 0x00 },
	{ '\u25BC', 0x00, 0xFF, 0xFF, 0x7E, 0x3C, 0x18, 0x00, 0x00 },

	// ASCII-Zeichen
	{ '\u0020', 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '!',      0x30, 0x30, 0x30, 0x30, 0x30, 0x00, 0x30, 0x00 },
	{ '!',      0x30, 0x78, 0x78, 0x30, 0x30, 0x00, 0x30, 0x00 },
	{ '\"',     0x77, 0x33, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '#',      0x36, 0x36, 0xFE, 0x6C, 0xFE, 0xD8, 0xD8, 0x00 },
	{ '$',      0x18, 0x3E, 0x6C, 0x3E, 0x1B, 0x1B, 0x7E, 0x18 },
	{ '%',      0x00, 0xC6, 0xCC, 0x18, 0x30, 0x66, 0xC6, 0x00 },
	{ '&',      0x38, 0x6C, 0x38, 0x76, 0xDC, 0xCC, 0x76, 0x00 },
	{ '\'',     0x1C, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '(',      0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00 },
	{ ')',      0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00 },
	{ '*',      0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00 },
	{ '+',      0x00, 0x30, 0x30, 0xFC, 0x30, 0x30, 0x00, 0x00 },
	{ ',',      0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x0C, 0x18 },
	{ '-',      0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00 },
	{ '.',      0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00 },
	{ '/',      0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x80, 0x00 },
	{ '0',      0x7C, 0xC6, 0xCE, 0xDE, 0xF6, 0xE6, 0x7C, 0x00 },
	{ '1',      0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xFC, 0x00 },
	{ '2',      0x78, 0xCC, 0x0C, 0x38, 0x60, 0xCC, 0xFC, 0x00 },
	{ '3',      0xFC, 0x18, 0x30, 0x78, 0x0C, 0xCC, 0x78, 0x00 },
	{ '4',      0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x1E, 0x00 },
	{ '5',      0xFC, 0xC0, 0xF8, 0x0C, 0x0C, 0xCC, 0x78, 0x00 },
	{ '6',      0x38, 0x60, 0xC0, 0xF8, 0xCC, 0xCC, 0x78, 0x00 },
	{ '7',      0xFC, 0xCC, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x00 },
	{ '8',      0x78, 0xCC, 0xCC, 0x78, 0xCC, 0xCC, 0x78, 0x00 },
	{ '9',      0x78, 0xCC, 0xCC, 0x7C, 0x0C, 0x18, 0x70, 0x00 },
	{ ':',      0x00, 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x00 },
	{ ';',      0x00, 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60 },
	{ '<',      0x18, 0x30, 0x60, 0xC0, 0x60, 0x30, 0x18, 0x00 },
	{ '=',      0x00, 0x00, 0xFC, 0x00, 0xFC, 0x00, 0x00, 0x00 },
	{ '>',      0x60, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x60, 0x00 },
	{ '?',      0x78, 0xCC, 0x0C, 0x18, 0x30, 0x00, 0x30, 0x00 },
	{ '@',      0x7C, 0xC6, 0xDE, 0xD6, 0xDE, 0xC0, 0x78, 0x00 },
	{ '@',      0x7C, 0xC6, 0xDE, 0xDE, 0xDE, 0xC0, 0x78, 0x00 },
	{ 'A',      0x30, 0x78, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x00 },
	{ 'B',      0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC, 0x00 },
	{ 'C',      0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C, 0x00 },
	{ 'D',      0xF8, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0xF8, 0x00 },
	{ 'E',      0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE, 0x00 },
	{ 'F',      0xFE, 0x62, 0x68, 0x78, 0x68, 0x60, 0xF0, 0x00 },
	{ 'G',      0x3C, 0x66, 0xC0, 0xC0, 0xCE, 0x66, 0x3C, 0x00 },
	{ 'H',      0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC, 0x00 },
	{ 'I',      0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 },
	{ 'J',      0x1E, 0x0C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78, 0x00 },
	{ 'K',      0xE6, 0x66, 0x6C, 0x70, 0x6C, 0x66, 0xE6, 0x00 },
	{ 'L',      0xF0, 0x60, 0x60, 0x60, 0x62, 0x66, 0xFE, 0x00 },
	{ 'M',      0xC6, 0xEE, 0xFE, 0xD6, 0xC6, 0xC6, 0xC6, 0x00 },
	{ 'N',      0xC6, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0xC6, 0x00 },
	{ 'O',      0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38, 0x00 },
	{ 'P',      0xFC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xF0, 0x00 },
	{ 'Q',      0x78, 0xCC, 0xCC, 0xCC, 0xDC, 0x78, 0x1C, 0x00 },
	{ 'R',      0xFC, 0x66, 0x66, 0x7C, 0x6C, 0x66, 0xE6, 0x00 },
	{ 'S',      0x7C, 0xC6, 0xF0, 0x3C, 0x0E, 0xC6, 0x7C, 0x00 },
	{ 'T',      0xFC, 0xB4, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00 },
	{ 'U',      0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00 },
	{ 'V',      0xCC, 0xCC, 0xCC, 0x78, 0x78, 0x30, 0x30, 0x00 },
	{ 'W',      0xC6, 0xC6, 0xC6, 0xD6, 0xFE, 0xEE, 0xC6, 0x00 },
	{ 'X',      0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6, 0x00 },
	{ 'Y',      0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x30, 0x78, 0x00 },
	{ 'Z',      0xFE, 0xC6, 0x8C, 0x18, 0x32, 0x66, 0xFE, 0x00 },
	{ '[',      0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00 },
	{ '\\',     0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x00 },
	{ ']',      0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00 },
	{ '^',      0x10, 0x38, 0x6C, 0xC6, 0x00, 0x00, 0x00, 0x00 },
	{ '_',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF },
	{ '`',      0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 'a',      0x00, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00 },
	{ 'b',      0xE0, 0x60, 0x7C, 0x66, 0x66, 0x66, 0xDC, 0x00 },
	{ 'c',      0x00, 0x00, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x00 },
	{ 'd',      0x1C, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x76, 0x00 },
	{ 'e',      0x00, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 },
	{ 'f',      0x38, 0x6C, 0x60, 0xF0, 0x60, 0x60, 0xF0, 0x00 },
	{ 'g',      0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 },
	{ 'h',      0xE0, 0x60, 0x6C, 0x76, 0x66, 0x66, 0xE6, 0x00 },
	{ 'i',      0x30, 0x00, 0x70, 0x30, 0x30, 0x30, 0xFC, 0x00 },
	{ 'j',      0x0C, 0x00, 0x1C, 0x0C, 0x0C, 0xCC, 0xCC, 0x78 },
	{ 'k',      0xE0, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0xE6, 0x00 },
	{ 'l',      0x70, 0x30, 0x30, 0x30, 0x30, 0x30, 0xFC, 0x00 },
	{ 'm',      0x00, 0x00, 0xCC, 0xFE, 0xFE, 0xD6, 0xC6, 0x00 },
	{ 'n',      0x00, 0x00, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0x00 },
	{ 'o',      0x00, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00 },
	{ 'p',      0x00, 0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0xF0 },
	{ 'q',      0x00, 0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x1E },
	{ 'r',      0x00, 0x00, 0xDC, 0x76, 0x66, 0x60, 0xF0, 0x00 },
	{ 's',      0x00, 0x00, 0x7C, 0xC0, 0x78, 0x0C, 0xF8, 0x00 },
	{ 't',      0x10, 0x30, 0x7C, 0x30, 0x30, 0x34, 0x18, 0x00 },
	{ 'u',      0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00 },
	{ 'v',      0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x78, 0x30, 0x00 },
	{ 'w',      0x00, 0x00, 0xC6, 0xD6, 0xFE, 0xFE, 0x6C, 0x00 },
	{ 'x',      0x00, 0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00 },
	{ 'y',      0x00, 0x00, 0xCC, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 },
	{ 'z',      0x00, 0x00, 0xFC, 0x98, 0x30, 0x64, 0xFC, 0x00 },
	{ '{',      0x1C, 0x30, 0x30, 0xE0, 0x30, 0x30, 0x1C, 0x00 },
	{ '|',      0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00 },
	{ '|',      0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00 },
	{ '}',      0xE0, 0x30, 0x30, 0x1C, 0x30, 0x30, 0xE0, 0x00 },
	{ '~',      0x76, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },

	// CAOS-Zeichensatz, Code 60h, Copyright-Zeichen
	{ '\u00A9', 0x3C, 0x42, 0x99, 0xA1, 0xA1, 0x99, 0x42, 0x3C },

	// CAOS-Zeichensatz, Code 5D, Negationszeichen
	{ '\u00AC', 0x00, 0xFE, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00 },

	// IBM-Zeichensatz, Codes 7Fh bis 0FFh
	{ '\u2302', 0x00, 0x10, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0x00 },
	{ '\u00C7', 0x78, 0xCC, 0xC0, 0xC0, 0xCC, 0x78, 0x10, 0x70 },
	{ '\u00FC', 0x00, 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00 },
	{ '\u00FC', 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x76, 0x00 },
	{ '\u00E9', 0x1C, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 },
	{ '\u00E2', 0x78, 0x84, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00 },
	{ '\u00E4', 0x6C, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00 },
	{ '\u00E0', 0xE0, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00 },
	{ '\u00E5', 0x30, 0x30, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00 },
	{ '\u00E7', 0x00, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x10, 0x70 },
	{ '\u00EA', 0x78, 0x84, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 },
	{ '\u00EB', 0xCC, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 },
	{ '\u00E8', 0xE0, 0x00, 0x78, 0xCC, 0xFC, 0xC0, 0x78, 0x00 },
	{ '\u00EF', 0xD8, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 },
	{ '\u00EE', 0x70, 0x88, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 },
	{ '\u00EC', 0xE0, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 },
	{ '\u00C4', 0xCC, 0x30, 0x78, 0xCC, 0xFC, 0xCC, 0xCC, 0x00 },
	{ '\u00C2', 0x78, 0x84, 0x30, 0x78, 0xCC, 0xFC, 0xCC, 0x00 },
	{ '\u00C9', 0x1C, 0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00 },
	{ '\u00E6', 0x00, 0x00, 0x6C, 0x92, 0x9E, 0x90, 0x7E, 0x00 },
	{ '\u00C6', 0x3E, 0x78, 0xD8, 0xFE, 0xD8, 0xD8, 0xDE, 0x00 },
	{ '\u00F4', 0x78, 0x84, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 },
	{ '\u00F6', 0x00, 0xCC, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 },
	{ '\u00F6', 0xCC, 0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00 },
	{ '\u00F2', 0x00, 0xE0, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 },
	{ '\u00FB', 0x78, 0x84, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00 },
	{ '\u00F9', 0x00, 0xE0, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00 },
	{ '\u00FF', 0x00, 0xCC, 0x00, 0xCC, 0xCC, 0x7C, 0x0C, 0xF8 },
	{ '\u00D6', 0xC6, 0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x38, 0x00 },
	{ '\u00DC', 0xCC, 0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0x78, 0x00 },
	{ '\u00A2', 0x00, 0x10, 0x7C, 0xD6, 0xD0, 0xD6, 0x7C, 0x10 },
	{ '\u00A3', 0x38, 0x6C, 0x64, 0xF0, 0x60, 0xE6, 0xFC, 0x00 },
	{ '\u00A5', 0x66, 0x66, 0x3C, 0x7E, 0x18, 0x7E, 0x18, 0x18 },
	{ '\u20A7', 0xF8, 0xCC, 0xCC, 0xFA, 0xC6, 0xCF, 0xC6, 0xC7 },
	{ '\u0192', 0x0E, 0x1B, 0x18, 0x3C, 0x18, 0x18, 0xD8, 0x70 },
	{ '\u00E1', 0x1C, 0x00, 0x78, 0x0C, 0x7C, 0xCC, 0x76, 0x00 },
	{ '\u00ED', 0x38, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00 },
	{ '\u00F3', 0x00, 0x1C, 0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00 },
	{ '\u00FA', 0x00, 0x1C, 0x00, 0xCC, 0xCC, 0xCC, 0x76, 0x00 },
	{ '\u00F1', 0x00, 0xF8, 0x00, 0xF8, 0xCC, 0xCC, 0xCC, 0x00 },
	{ '\u00D1', 0xFC, 0x00, 0xCC, 0xEC, 0xFC, 0xDC, 0xCC, 0x00 },
	{ '\u00AA', 0x00, 0x3C, 0x6C, 0x6C, 0x3E, 0x00, 0x7E, 0x00 },
	{ '\u00BA', 0x00, 0x38, 0x6C, 0x6C, 0x38, 0x00, 0x7C, 0x00 },
	{ '\u00BF', 0x30, 0x00, 0x30, 0x18, 0x0C, 0xCC, 0x78, 0x00 },
	{ '\u2310', 0x00, 0x00, 0x00, 0x7E, 0x60, 0x60, 0x00, 0x00 },
	{ '\u00AC', 0x00, 0x00, 0x00, 0x7E, 0x06, 0x06, 0x00, 0x00 },
	{ '\u00BD', 0xC3, 0xC6, 0xCC, 0xDE, 0x33, 0x66, 0xCC, 0x0F },
	{ '\u00BC', 0xC3, 0xC6, 0xCC, 0xDB, 0x37, 0x6F, 0xCF, 0x03 },
	{ '\u00A1', 0x30, 0x00, 0x30, 0x30, 0x78, 0x78, 0x30, 0x00 },
	{ '\u00AB', 0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00, 0x00 },
	{ '\u00BB', 0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00, 0x00 },
	{ '\u2591', 0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88 },
	{ '\u2592', 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA, 0x55, 0xAA },
	{ '\u2593', 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD, 0x77, 0xDD },
	{ '\u2502', 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18 },
	{ '\u2524', 0x18, 0x18, 0x18, 0xF8, 0x18, 0x18, 0x18, 0x18 },
	{ '\u2561', 0x18, 0x18, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18 },
	{ '\u2562', 0x36, 0x36, 0x36, 0xF6, 0x36, 0x36, 0x36, 0x36 },
	{ '\u2556', 0x00, 0x00, 0x00, 0xFE, 0x36, 0x36, 0x36, 0x36 },
	{ '\u2555', 0x00, 0x00, 0xF8, 0x18, 0xF8, 0x18, 0x18, 0x18 },
	{ '\u2563', 0x36, 0x36, 0xF6, 0x06, 0xF6, 0x36, 0x36, 0x36 },
	{ '\u2551', 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36 },
	{ '\u2557', 0x00, 0x00, 0xFE, 0x06, 0xF6, 0x36, 0x36, 0x36 },
	{ '\u255D', 0x36, 0x36, 0xF6, 0x06, 0xFE, 0x00, 0x00, 0x00 },
	{ '\u255C', 0x36, 0x36, 0x36, 0xFE, 0x00, 0x00, 0x00, 0x00 },
	{ '\u255B', 0x18, 0x18, 0xF8, 0x18, 0xF8, 0x00, 0x00, 0x00 },
	{ '\u2510', 0x00, 0x00, 0x00, 0xF8, 0x18, 0x18, 0x18, 0x18 },
	{ '\u2514', 0x18, 0x18, 0x18, 0x1F, 0x00, 0x00, 0x00, 0x00 },
	{ '\u2534', 0x18, 0x18, 0x18, 0xFF, 0x00, 0x00, 0x00, 0x00 },
	{ '\u252C', 0x00, 0x00, 0x00, 0xFF, 0x18, 0x18, 0x18, 0x18 },
	{ '\u251C', 0x18, 0x18, 0x18, 0x1F, 0x18, 0x18, 0x18, 0x18 },
	{ '\u2500', 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00 },
	{ '\u253C', 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18, 0x18, 0x18 },
	{ '\u255E', 0x18, 0x18, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18 },
	{ '\u255F', 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36, 0x36 },
	{ '\u255A', 0x36, 0x36, 0x37, 0x30, 0x3F, 0x00, 0x00, 0x00 },
	{ '\u2554', 0x00, 0x00, 0x3F, 0x30, 0x37, 0x36, 0x36, 0x36 },
	{ '\u2569', 0x36, 0x36, 0xF7, 0x00, 0xFF, 0x00, 0x00, 0x00 },
	{ '\u2566', 0x00, 0x00, 0xFF, 0x00, 0xF7, 0x36, 0x36, 0x36 },
	{ '\u2560', 0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36 },
	{ '\u2550', 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00 },
	{ '\u256C', 0x36, 0x36, 0xF7, 0x00, 0xF7, 0x36, 0x36, 0x36 },
	{ '\u2567', 0x18, 0x18, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00 },
	{ '\u2568', 0x36, 0x36, 0x36, 0xFF, 0x00, 0x00, 0x00, 0x00 },
	{ '\u2564', 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x18, 0x18, 0x18 },
	{ '\u2565', 0x00, 0x00, 0x00, 0xFF, 0x36, 0x36, 0x36, 0x36 },
	{ '\u2559', 0x36, 0x36, 0x36, 0x3F, 0x00, 0x00, 0x00, 0x00 },
	{ '\u2558', 0x18, 0x18, 0x1F, 0x18, 0x1F, 0x00, 0x00, 0x00 },
	{ '\u2552', 0x00, 0x00, 0x1F, 0x18, 0x1F, 0x18, 0x18, 0x18 },
	{ '\u2553', 0x00, 0x00, 0x00, 0x3F, 0x36, 0x36, 0x36, 0x36 },
	{ '\u256B', 0x36, 0x36, 0x36, 0xFF, 0x36, 0x36, 0x36, 0x36 },
	{ '\u256A', 0x18, 0x18, 0xFF, 0x18, 0xFF, 0x18, 0x18, 0x18 },
	{ '\u2518', 0x18, 0x18, 0x18, 0xF8, 0x00, 0x00, 0x00, 0x00 },
	{ '\u250C', 0x00, 0x00, 0x00, 0x1F, 0x18, 0x18, 0x18, 0x18 },
	{ '\u2588', 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
	{ '\u2584', 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF },
	{ '\u258C', 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0 },
	{ '\u2590', 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F },
	{ '\u2580', 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00 },
	{ '\u03B1', 0x00, 0x00, 0x76, 0xDC, 0xCC, 0xDC, 0x76, 0x00 },
	{ '\u00DF', 0x3C, 0x66, 0x66, 0x6C, 0x66, 0x66, 0x6C, 0xF0 },
	{ '\u0393', 0xFE, 0x62, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x00 },
	{ '\u03C0', 0x00, 0xFE, 0x6C, 0x6C, 0x6C, 0x6C, 0x6E, 0x00 },
	{ '\u03A3', 0x7E, 0x62, 0x30, 0x18, 0x30, 0x62, 0x7E, 0x00 },
	{ '\u03C3', 0x00, 0x00, 0x7E, 0xD8, 0xD8, 0xD8, 0x70, 0x00 },
	{ '\u00B5', 0x00, 0x00, 0xCC, 0xCC, 0xCC, 0xF6, 0xC0, 0xC0 },
	{ '\u03C4', 0x00, 0x7E, 0xD8, 0x18, 0x18, 0x18, 0x18, 0x00 },
	{ '\u03A6', 0x3C, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0x3C },
	{ '\u0398', 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00 },
	{ '\u03A9', 0x38, 0x6C, 0xC6, 0xC6, 0x6C, 0x6C, 0xEE, 0x00 },
	{ '\u03B4', 0x1C, 0x30, 0x18, 0x7C, 0xCC, 0xCC, 0x78, 0x00 },
	{ '\u221E', 0x00, 0x6C, 0xFE, 0x92, 0xFE, 0x6C, 0x00, 0x00 },
	{ '\u03C6', 0x03, 0x7E, 0xCC, 0xDE, 0xF6, 0x66, 0xFC, 0x80 },
	{ '\u03B5', 0x3C, 0x60, 0xC0, 0xFC, 0xC0, 0x60, 0x3C, 0x00 },
	{ '\u2229', 0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x00 },
	{ '\u2261', 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00 },
	{ '\u00B1', 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x7E, 0x00 },
	{ '\u2265', 0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x7E, 0x00 },
	{ '\u2264', 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x00, 0x7E, 0x00 },
	{ '\u2320', 0x0E, 0x1B, 0x1B, 0x18, 0x18, 0x18, 0x18, 0x18 },
	{ '\u2321', 0x18, 0x18, 0x18, 0x18, 0x18, 0xD8, 0xD8, 0x70 },
	{ '\u00F7', 0x18, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x18, 0x00 },
	{ '\u2248', 0x00, 0x76, 0xDC, 0x00, 0x76, 0xDC, 0x00, 0x00 },
	{ '\u00B0', 0x38, 0x6C, 0x6C, 0x38, 0x00, 0x00, 0x00, 0x00 },
	{ '\u2219', 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00 },
	{ '\u00B7', 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00 },
	{ '\u221A', 0x0F, 0x0C, 0x0C, 0x0C, 0xCC, 0x6C, 0x3C, 0x1C },
	{ '\u207F', 0x78, 0x6C, 0x6C, 0x6C, 0x6C, 0x00, 0x00, 0x00 },
	{ '\u00B2', 0x70, 0x18, 0x30, 0x60, 0x78, 0x00, 0x00, 0x00 },
	{ '\u25A0', 0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x00, 0x00 },
	{ '\u25A1', 0xFF, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xFF } };

  // Zeichensatz HC 900, CAOS 2.x und CAOS 3.x
  private static final int[][] font8x8b = {
	{ '\u0020', 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '!',      0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x00 },
	{ '\"',     0x00, 0x66, 0x66, 0xCC, 0x00, 0x00, 0x00, 0x00 },
	{ '#',      0x00, 0x36, 0x7F, 0x36, 0x36, 0x7F, 0x36, 0x00 },
	{ '$',      0x18, 0x3E, 0x6C, 0x3E, 0x1B, 0x1B, 0x7E, 0x18 },
	{ '%',      0x00, 0x63, 0x66, 0x0C, 0x18, 0x36, 0x66, 0x00 },
	{ '&',      0x18, 0x24, 0x28, 0x11, 0x2A, 0x44, 0x4A, 0x31 },
	{ '\'',     0x00, 0x18, 0x18, 0x30, 0x00, 0x00, 0x00, 0x00 },
	{ '(',      0x00, 0x18, 0x30, 0x30, 0x30, 0x30, 0x18, 0x00 },
	{ ')',      0x00, 0x18, 0x0C, 0x0C, 0x0C, 0x0C, 0x18, 0x00 },
	{ '*',      0x00, 0x00, 0x24, 0x18, 0x7E, 0x18, 0x24, 0x00 },
	{ '+',      0x00, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00 },
	{ ',',      0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x00 },
	{ '-',      0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00 },
	{ '.',      0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00 },
	{ '/',      0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x00, 0x00 },
	{ '0',      0x00, 0x3C, 0x6E, 0x6E, 0x76, 0x76, 0x3C, 0x00 },
	{ '1',      0x00, 0x1C, 0x3C, 0x0C, 0x0C, 0x0C, 0x3E, 0x00 },
	{ '2',      0x00, 0x3C, 0x66, 0x06, 0x3C, 0x60, 0x7E, 0x00 },
	{ '3',      0x00, 0x3C, 0x66, 0x0C, 0x06, 0x66, 0x3C, 0x00 },
	{ '4',      0x00, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x0C, 0x00 },
	{ '5',      0x00, 0x7E, 0x60, 0x7C, 0x06, 0x66, 0x3C, 0x00 },
	{ '6',      0x00, 0x3C, 0x60, 0x7C, 0x66, 0x66, 0x3C, 0x00 },
	{ '7',      0x00, 0x7E, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00 },
	{ '8',      0x00, 0x3C, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00 },
	{ '9',      0x00, 0x3C, 0x66, 0x66, 0x3E, 0x06, 0x3C, 0x00 },
	{ ':',      0x00, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00 },
	{ ';',      0x00, 0x00, 0x18, 0x00, 0x18, 0x18, 0x30, 0x00 },
	{ '<',      0x00, 0x00, 0x18, 0x30, 0x60, 0x30, 0x18, 0x00 },
	{ '=',      0x00, 0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00 },
	{ '>',      0x00, 0x00, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x00 },
	{ '?',      0x00, 0x3C, 0x66, 0x06, 0x1C, 0x18, 0x00, 0x18 },
	{ '@',      0x3C, 0x42, 0x81, 0x35, 0x49, 0x49, 0x49, 0x36 },
	{ 'A',      0x00, 0x3C, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x00 },
	{ 'B',      0x00, 0x7C, 0x66, 0x7C, 0x66, 0x66, 0x7C, 0x00 },
	{ 'C',      0x00, 0x3C, 0x66, 0x60, 0x60, 0x66, 0x3C, 0x00 },
	{ 'D',      0x00, 0x7C, 0x66, 0x66, 0x66, 0x66, 0x7C, 0x00 },
	{ 'E',      0x00, 0x7E, 0x60, 0x7C, 0x60, 0x60, 0x7E, 0x00 },
	{ 'F',      0x00, 0x7E, 0x60, 0x7C, 0x60, 0x60, 0x60, 0x00 },
	{ 'G',      0x00, 0x3C, 0x66, 0x60, 0x6E, 0x66, 0x3C, 0x00 },
	{ 'H',      0x00, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00 },
	{ 'I',      0x00, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00 },
	{ 'J',      0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x6C, 0x38, 0x00 },
	{ 'K',      0x00, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0x63, 0x00 },
	{ 'L',      0x00, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7E, 0x00 },
	{ 'M',      0x00, 0x63, 0x77, 0x6B, 0x63, 0x63, 0x63, 0x00 },
	{ 'N',      0x00, 0x63, 0x73, 0x6B, 0x67, 0x63, 0x63, 0x00 },
	{ 'O',      0x00, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 },
	{ 'P',      0x00, 0x7C, 0x66, 0x7C, 0x60, 0x60, 0x60, 0x00 },
	{ 'Q',      0x00, 0x3C, 0x66, 0x66, 0x6E, 0x66, 0x3A, 0x01 },
	{ 'R',      0x00, 0x7C, 0x66, 0x7C, 0x6C, 0x66, 0x63, 0x00 },
	{ 'S',      0x00, 0x3C, 0x60, 0x3C, 0x06, 0x66, 0x3C, 0x00 },
	{ 'T',      0x00, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00 },
	{ 'U',      0x00, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 },
	{ 'V',      0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00 },
	{ 'W',      0x00, 0x63, 0x63, 0x6B, 0x6B, 0x7F, 0x36, 0x00 },
	{ 'X',      0x00, 0x66, 0x3C, 0x18, 0x18, 0x3C, 0x66, 0x00 },
	{ 'Y',      0x00, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x18, 0x00 },
	{ 'Z',      0x00, 0x7E, 0x0C, 0x18, 0x30, 0x60, 0x7E, 0x00 },
	{ '|',      0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00 },
	{ '^',      0x00, 0x00, 0x00, 0x08, 0x1C, 0x36, 0x00, 0x00 },
	{ '_',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF },
	{ 'a',      0x00, 0x00, 0x3C, 0x66, 0x66, 0x66, 0x3B, 0x00 },
	{ 'b',      0x00, 0x60, 0x60, 0x78, 0x6C, 0x6C, 0x78, 0x00 },
	{ 'c',      0x00, 0x00, 0x3C, 0x66, 0x60, 0x66, 0x3C, 0x00 },
	{ 'd',      0x00, 0x06, 0x06, 0x1E, 0x36, 0x36, 0x1E, 0x00 },
	{ 'e',      0x00, 0x00, 0x38, 0x6C, 0x7C, 0x60, 0x38, 0x00 },
	{ 'f',      0x00, 0x1E, 0x18, 0x7E, 0x18, 0x18, 0x18, 0x00 },
	{ 'g',      0x00, 0x00, 0x3C, 0x66, 0x66, 0x3F, 0x06, 0x3C },
	{ 'h',      0x00, 0x60, 0x60, 0x6C, 0x76, 0x66, 0x66, 0x00 },
	{ 'i',      0x00, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00 },
	{ 'j',      0x00, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x30 },
	{ 'k',      0x00, 0x60, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0x00 },
	{ 'l',      0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0x18, 0x00 },
	{ 'm',      0x00, 0x00, 0x36, 0x7F, 0x6B, 0x63, 0x63, 0x00 },
	{ 'n',      0x00, 0x00, 0x7C, 0x66, 0x66, 0x66, 0x66, 0x00 },
	{ 'o',      0x00, 0x00, 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x00 },
	{ 'p',      0x00, 0x00, 0x7C, 0x66, 0x66, 0x7C, 0x60, 0x60 },
	{ 'q',      0x00, 0x00, 0x3C, 0x66, 0x66, 0x3E, 0x06, 0x06 },
	{ 'r',      0x00, 0x00, 0x36, 0x38, 0x30, 0x30, 0x30, 0x00 },
	{ 's',      0x00, 0x00, 0x1C, 0x30, 0x1C, 0x06, 0x3C, 0x00 },
	{ 't',      0x00, 0x18, 0x18, 0x3C, 0x18, 0x18, 0x0C, 0x00 },
	{ 'u',      0x00, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 },
	{ 'v',      0x00, 0x00, 0x66, 0x66, 0x3C, 0x3C, 0x18, 0x00 },
	{ 'w',      0x00, 0x00, 0x63, 0x63, 0x6B, 0x7F, 0x36, 0x00 },
	{ 'x',      0x00, 0x00, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x00 },
	{ 'y',      0x00, 0x00, 0x66, 0x3C, 0x18, 0x30, 0x60, 0x00 },
	{ 'z',      0x00, 0x00, 0x7E, 0x0C, 0x18, 0x30, 0x7E, 0x00 },
	// Copyright-Zeichen
	{ '\u00A9', 0x7E, 0x81, 0x99, 0xA1, 0xA1, 0x99, 0x81, 0x7E },
	// Negationszeichen
	{ '\u00AC', 0x00, 0x7E, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00 },
	{ '\u00E4', 0x66, 0x00, 0x3C, 0x66, 0x66, 0x66, 0x3B, 0x00 },
	{ '\u00F6', 0x66, 0x00, 0x3C, 0x66, 0x66, 0x66, 0x3C, 0x00 },
	{ '\u00FC', 0x66, 0x00, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 },
	{ '\u00DF', 0x00, 0x38, 0x6C, 0x78, 0x6C, 0x78, 0x60, 0x60 },
	// ausgefuelltes Quadrat
	{ '\u25A0', 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
	// nicht ausgefuelltes Quadrat
	{ '\u25A1', 0xFF, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xFF } };

  /*
   * 4x8-Zeichensatz mit der Trennzeile unten (MicroDOS)
   */
  private static final int[][] font4x8a = {
	{ '\u0020', 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '!',      0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x02, 0x00 },
	{ '\"',     0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '#',      0x00, 0x05, 0x07, 0x05, 0x07, 0x05, 0x00, 0x00 },
	{ '$',      0x02, 0x07, 0x06, 0x02, 0x03, 0x07, 0x02, 0x00 },
	{ '%',      0x00, 0x05, 0x01, 0x02, 0x02, 0x04, 0x05, 0x00 },
	{ '&',      0x00, 0x02, 0x05, 0x02, 0x05, 0x04, 0x03, 0x00 },
	{ '\'',     0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '(',      0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x00 },
	{ ')',      0x06, 0x01, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00 },
	{ '*',      0x00, 0x00, 0x05, 0x02, 0x05, 0x00, 0x00, 0x00 },
	{ '+',      0x00, 0x00, 0x02, 0x07, 0x02, 0x00, 0x00, 0x00 },
	{ ',',      0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x04 },
	{ '-',      0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00 },
	{ '.',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00 },
	{ '/',      0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x00 },
	{ '0',      0x02, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x00 },
	{ '1',      0x01, 0x03, 0x05, 0x01, 0x01, 0x01, 0x01, 0x00 },
	{ '2',      0x02, 0x05, 0x05, 0x01, 0x02, 0x04, 0x07, 0x00 },
	{ '3',      0x02, 0x05, 0x01, 0x02, 0x01, 0x05, 0x02, 0x00 },
	{ '4',      0x04, 0x05, 0x05, 0x07, 0x01, 0x01, 0x01, 0x00 },
	{ '4',      0x05, 0x05, 0x05, 0x07, 0x01, 0x01, 0x01, 0x00 },
	{ '5',      0x07, 0x04, 0x04, 0x07, 0x01, 0x05, 0x02, 0x00 },
	{ '6',      0x02, 0x04, 0x04, 0x06, 0x05, 0x05, 0x02, 0x00 },
	{ '7',      0x07, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x00 },
	{ '8',      0x02, 0x05, 0x05, 0x02, 0x05, 0x05, 0x02, 0x00 },
	{ '9',      0x02, 0x05, 0x05, 0x03, 0x01, 0x01, 0x02, 0x00 },
	{ ':',      0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00 },
	{ ';',      0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04 },
	{ '<',      0x00, 0x01, 0x02, 0x04, 0x02, 0x01, 0x00, 0x00 },
	{ '=',      0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00 },
	{ '>',      0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00 },
	{ '?',      0x02, 0x05, 0x01, 0x02, 0x02, 0x00, 0x02, 0x00 },
	{ '@',      0x06, 0x05, 0x01, 0x02, 0x05, 0x05, 0x03, 0x00 },
	{ 'A',      0x02, 0x05, 0x05, 0x07, 0x05, 0x05, 0x05, 0x00 },
	{ 'B',      0x06, 0x05, 0x05, 0x06, 0x05, 0x05, 0x06, 0x00 },
	{ 'C',      0x02, 0x05, 0x04, 0x04, 0x04, 0x05, 0x02, 0x00 },
	{ 'D',      0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x06, 0x00 },
	{ 'E',      0x07, 0x04, 0x04, 0x06, 0x04, 0x04, 0x07, 0x00 },
	{ 'F',      0x07, 0x04, 0x04, 0x06, 0x04, 0x04, 0x04, 0x00 },
	{ 'G',      0x02, 0x05, 0x04, 0x04, 0x05, 0x05, 0x03, 0x00 },
	{ 'H',      0x05, 0x05, 0x05, 0x07, 0x05, 0x05, 0x05, 0x00 },
	{ 'I',      0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0x00 },
	{ 'J',      0x07, 0x01, 0x01, 0x01, 0x01, 0x05, 0x02, 0x00 },
	{ 'K',      0x05, 0x05, 0x06, 0x04, 0x06, 0x05, 0x05, 0x00 },
	{ 'L',      0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x07, 0x00 },
	{ 'M',      0x05, 0x07, 0x07, 0x05, 0x05, 0x05, 0x05, 0x00 },
	{ 'N',      0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x00 },
	{ 'N',      0x07, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x00 },
	{ 'O',      0x07, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00 },
	{ 'P',      0x06, 0x05, 0x05, 0x06, 0x04, 0x04, 0x04, 0x00 },
	{ 'Q',      0x07, 0x05, 0x05, 0x05, 0x05, 0x07, 0x07, 0x01 },
	{ 'R',      0x06, 0x05, 0x05, 0x06, 0x05, 0x05, 0x05, 0x00 },
	{ 'S',      0x02, 0x05, 0x04, 0x02, 0x01, 0x05, 0x02, 0x00 },
	{ 'T',      0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00 },
	{ 'U',      0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00 },
	{ 'V',      0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x00 },
	{ 'W',      0x05, 0x05, 0x05, 0x05, 0x07, 0x07, 0x05, 0x00 },
	{ 'X',      0x05, 0x05, 0x05, 0x02, 0x05, 0x05, 0x05, 0x00 },
	{ 'Y',      0x05, 0x05, 0x05, 0x07, 0x02, 0x02, 0x02, 0x00 },
	{ 'Z',      0x07, 0x01, 0x01, 0x02, 0x04, 0x04, 0x07, 0x00 },
	{ '[',      0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x07, 0x00 },
	{ '\\',     0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x00 },
	{ ']',      0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x07, 0x00 },
	{ '^',      0x00, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '_',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07 },
	{ '`',      0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 'a',      0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x03, 0x00 },
	{ 'b',      0x04, 0x04, 0x06, 0x05, 0x05, 0x05, 0x06, 0x00 },
	{ 'c',      0x00, 0x00, 0x03, 0x04, 0x04, 0x04, 0x03, 0x00 },
	{ 'd',      0x01, 0x01, 0x03, 0x05, 0x05, 0x05, 0x03, 0x00 },
	{ 'e',      0x00, 0x00, 0x02, 0x05, 0x07, 0x04, 0x07, 0x00 },
	{ 'f',      0x02, 0x05, 0x04, 0x06, 0x04, 0x04, 0x04, 0x04 },
	{ 'g',      0x00, 0x00, 0x03, 0x05, 0x05, 0x03, 0x01, 0x06 },
	{ 'h',      0x04, 0x04, 0x06, 0x05, 0x05, 0x05, 0x05, 0x00 },
	{ 'i',      0x00, 0x02, 0x00, 0x02, 0x02, 0x02, 0x02, 0x00 },
	{ 'j',      0x00, 0x02, 0x00, 0x02, 0x02, 0x02, 0x02, 0x06 },
	{ 'k',      0x04, 0x04, 0x05, 0x05, 0x06, 0x05, 0x05, 0x00 },
	{ 'l',      0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x02, 0x00 },
	{ 'm',      0x00, 0x00, 0x05, 0x07, 0x05, 0x05, 0x05, 0x00 },
	{ 'n',      0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x05, 0x00 },
	{ 'o',      0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x02, 0x00 },
	{ 'p',      0x00, 0x00, 0x02, 0x05, 0x05, 0x06, 0x04, 0x04 },
	{ 'q',      0x00, 0x00, 0x02, 0x05, 0x05, 0x03, 0x01, 0x01 },
	{ 'r',      0x00, 0x00, 0x06, 0x05, 0x04, 0x04, 0x04, 0x00 },
	{ 's',      0x00, 0x00, 0x02, 0x04, 0x02, 0x01, 0x06, 0x00 },
	{ 's',      0x00, 0x00, 0x03, 0x04, 0x02, 0x01, 0x06, 0x00 },
	{ 't',      0x02, 0x02, 0x07, 0x02, 0x02, 0x02, 0x01, 0x00 },
	{ 'u',      0x00, 0x00, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00 },
	{ 'v',      0x00, 0x00, 0x05, 0x05, 0x05, 0x05, 0x02, 0x00 },
	{ 'w',      0x00, 0x00, 0x05, 0x05, 0x07, 0x07, 0x05, 0x00 },
	{ 'x',      0x00, 0x00, 0x05, 0x05, 0x02, 0x05, 0x05, 0x00 },
	{ 'y',      0x00, 0x00, 0x05, 0x05, 0x05, 0x03, 0x01, 0x06 },
	{ 'y',      0x00, 0x00, 0x05, 0x05, 0x05, 0x03, 0x01, 0x07 },
	{ 'z',      0x00, 0x00, 0x07, 0x01, 0x02, 0x04, 0x07, 0x00 },
	{ '{',      0x03, 0x02, 0x02, 0x04, 0x02, 0x02, 0x03, 0x00 },
	{ '|',      0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00 },
	{ '}',      0x06, 0x02, 0x02, 0x01, 0x02, 0x02, 0x06, 0x00 },
	{ '~',      0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '\u00C4', 0x05, 0x02, 0x05, 0x05, 0x07, 0x05, 0x05, 0x00 },
	{ '\u00D6', 0x05, 0x00, 0x07, 0x05, 0x05, 0x05, 0x07, 0x00 },
	{ '\u00DC', 0x05, 0x00, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00 },
	{ '\u00E4', 0x00, 0x05, 0x00, 0x02, 0x05, 0x05, 0x03, 0x00 },
	{ '\u00F6', 0x00, 0x05, 0x00, 0x02, 0x05, 0x05, 0x02, 0x00 },
	{ '\u00FC', 0x00, 0x05, 0x00, 0x05, 0x05, 0x05, 0x07, 0x00 },
	{ '\u00DF', 0x02, 0x05, 0x05, 0x06, 0x05, 0x05, 0x06, 0x04 },
	{ '\u25A0', 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F } };

  /*
   * 4x8-Zeichensatz mit der Trennzeile oben
   * (TypeStar- und WordPro-Zeichensatz gemischt)
   *
   * Im TypeStar-Zeichensatz ist das grosse I ein senkrechter Strich
   * und hat das gleiche Bitmuster wie sonst das Zeichen |.
   * Aus diesem Grund wurde hier das TypeStar-I weggelassen.
   */
  private static final int[][] font4x8b = {
	{ '\u0020', 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '!',      0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x02 },
	{ '!',      0x00, 0x02, 0x07, 0x07, 0x02, 0x02, 0x00, 0x02 },
	{ '\"',     0x00, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '#',      0x00, 0x00, 0x00, 0x05, 0x07, 0x05, 0x07, 0x05 },
	{ '#',      0x00, 0x00, 0x05, 0x07, 0x05, 0x07, 0x05, 0x00 },
	{ '$',      0x00, 0x02, 0x03, 0x04, 0x02, 0x01, 0x06, 0x02 },
	{ '$',      0x00, 0x02, 0x07, 0x04, 0x02, 0x01, 0x07, 0x02 },
	{ '%',      0x00, 0x00, 0x05, 0x01, 0x02, 0x02, 0x04, 0x05 },
	{ '&',      0x00, 0x00, 0x04, 0x0A, 0x04, 0x0B, 0x0A, 0x05 },
	{ '\'',     0x00, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '(',      0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01 },
	{ ')',      0x00, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04 },
	{ '*',      0x00, 0x00, 0x00, 0x05, 0x02, 0x05, 0x00, 0x00 },
	{ '+',      0x00, 0x00, 0x02, 0x02, 0x07, 0x02, 0x02, 0x00 },
	{ ',',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02 },
	{ ',',      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02 },
	{ '-',      0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00 },
	{ '.',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 },
	{ '.',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03 },
	{ '/',      0x00, 0x00, 0x01, 0x01, 0x02, 0x02, 0x04, 0x04 },
	{ '0',      0x00, 0x02, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02 },
	{ '1',      0x00, 0x01, 0x03, 0x05, 0x01, 0x01, 0x01, 0x01 },
	{ '2',      0x00, 0x02, 0x05, 0x01, 0x02, 0x04, 0x04, 0x07 },
	{ '2',      0x00, 0x02, 0x05, 0x05, 0x01, 0x02, 0x04, 0x07 },
	{ '3',      0x00, 0x02, 0x05, 0x01, 0x02, 0x01, 0x05, 0x02 },
	{ '4',      0x00, 0x04, 0x05, 0x05, 0x07, 0x01, 0x01, 0x01 },
	{ '5',      0x00, 0x07, 0x04, 0x04, 0x07, 0x01, 0x05, 0x02 },
	{ '5',      0x00, 0x07, 0x04, 0x06, 0x05, 0x01, 0x05, 0x02 },
	{ '6',      0x00, 0x02, 0x04, 0x04, 0x06, 0x05, 0x05, 0x02 },
	{ '6',      0x00, 0x02, 0x04, 0x06, 0x05, 0x05, 0x05, 0x02 },
	{ '7',      0x00, 0x07, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02 },
	{ '7',      0x00, 0x07, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02 },
	{ '8',      0x00, 0x02, 0x05, 0x05, 0x02, 0x05, 0x05, 0x02 },
	{ '9',      0x00, 0x02, 0x05, 0x05, 0x03, 0x01, 0x05, 0x02 },
	{ ':',      0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02 },
	{ ':',      0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x02, 0x02 },
	{ ';',      0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x01, 0x02 },
	{ ';',      0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x01, 0x02 },
	{ '<',      0x00, 0x00, 0x01, 0x02, 0x04, 0x02, 0x01, 0x00 },
	{ '=',      0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00 },
	{ '>',      0x00, 0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00 },
	{ '?',      0x00, 0x02, 0x05, 0x01, 0x02, 0x02, 0x00, 0x02 },
	{ '@',      0x00, 0x02, 0x05, 0x05, 0x07, 0x07, 0x04, 0x07 },
	{ 'A',      0x00, 0x02, 0x05, 0x05, 0x07, 0x05, 0x05, 0x05 },
	{ 'B',      0x00, 0x06, 0x05, 0x05, 0x06, 0x05, 0x05, 0x06 },
	{ 'C',      0x00, 0x02, 0x05, 0x04, 0x04, 0x04, 0x05, 0x02 },
	{ 'C',      0x00, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03 },
	{ 'D',      0x00, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x06 },
	{ 'E',      0x00, 0x07, 0x04, 0x04, 0x06, 0x04, 0x04, 0x07 },
	{ 'E',      0x00, 0x07, 0x04, 0x04, 0x07, 0x04, 0x04, 0x07 },
	{ 'F',      0x00, 0x07, 0x04, 0x04, 0x06, 0x04, 0x04, 0x04 },
	{ 'F',      0x00, 0x07, 0x04, 0x04, 0x07, 0x04, 0x04, 0x04 },
	{ 'G',      0x00, 0x02, 0x05, 0x04, 0x04, 0x05, 0x05, 0x03 },
	{ 'G',      0x00, 0x03, 0x04, 0x04, 0x05, 0x05, 0x05, 0x03 },
	{ 'H',      0x00, 0x05, 0x05, 0x05, 0x07, 0x05, 0x05, 0x05 },
	{ 'I',      0x00, 0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07 },
	{ 'J',      0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x05, 0x02 },
	{ 'J',      0x00, 0x07, 0x01, 0x01, 0x01, 0x01, 0x05, 0x02 },
	{ 'K',      0x00, 0x05, 0x05, 0x05, 0x06, 0x05, 0x05, 0x05 },
	{ 'K',      0x00, 0x05, 0x05, 0x06, 0x04, 0x06, 0x05, 0x05 },
	{ 'L',      0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x07 },
	{ 'M',      0x00, 0x05, 0x07, 0x07, 0x05, 0x05, 0x05, 0x05 },
	{ 'N',      0x00, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05 },
	{ 'N',      0x00, 0x07, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05 },
	{ 'O',      0x00, 0x07, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07 },
	{ 'P',      0x00, 0x06, 0x05, 0x05, 0x06, 0x04, 0x04, 0x04 },
	{ 'Q',      0x00, 0x02, 0x05, 0x05, 0x05, 0x05, 0x05, 0x03 },
	{ 'Q',      0x00, 0x07, 0x05, 0x05, 0x05, 0x07, 0x07, 0x01 },
	{ 'R',      0x00, 0x06, 0x05, 0x05, 0x06, 0x05, 0x05, 0x05 },
	{ 'S',      0x00, 0x02, 0x05, 0x04, 0x02, 0x01, 0x05, 0x02 },
	{ 'T',      0x00, 0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02 },
	{ 'U',      0x00, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07 },
	{ 'V',      0x00, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02 },
	{ 'W',      0x00, 0x05, 0x05, 0x05, 0x05, 0x07, 0x07, 0x05 },
	{ 'X',      0x00, 0x05, 0x05, 0x05, 0x02, 0x05, 0x05, 0x05 },
	{ 'Y',      0x00, 0x05, 0x05, 0x05, 0x05, 0x02, 0x02, 0x02 },
	{ 'Y',      0x00, 0x05, 0x05, 0x05, 0x07, 0x02, 0x02, 0x02 },
	{ 'Z',      0x00, 0x07, 0x01, 0x01, 0x02, 0x04, 0x04, 0x07 },
	{ '^',      0x00, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ '_',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07 },
	{ '_',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F },
	{ '`',      0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00 },
	{ 'a',      0x00, 0x00, 0x00, 0x03, 0x05, 0x05, 0x05, 0x03 },
	{ 'b',      0x00, 0x04, 0x04, 0x06, 0x05, 0x05, 0x05, 0x06 },
	{ 'c',      0x00, 0x00, 0x00, 0x03, 0x04, 0x04, 0x04, 0x03 },
	{ 'd',      0x00, 0x01, 0x01, 0x03, 0x05, 0x05, 0x05, 0x03 },
	{ 'e',      0x00, 0x00, 0x00, 0x02, 0x05, 0x06, 0x04, 0x03 },
	{ 'e',      0x00, 0x00, 0x00, 0x02, 0x05, 0x07, 0x04, 0x03 },
	{ 'f',      0x00, 0x01, 0x02, 0x02, 0x07, 0x02, 0x02, 0x02 },
	{ 'g',      0x00, 0x00, 0x00, 0x03, 0x05, 0x03, 0x01, 0x02 },
	{ 'g',      0x00, 0x00, 0x00, 0x03, 0x05, 0x03, 0x01, 0x06 },
	{ 'h',      0x00, 0x04, 0x04, 0x06, 0x05, 0x05, 0x05, 0x05 },
	{ 'i',      0x00, 0x02, 0x00, 0x02, 0x02, 0x02, 0x02, 0x02 },
	{ 'j',      0x00, 0x01, 0x00, 0x01, 0x01, 0x01, 0x01, 0x02 },
	{ 'j',      0x00, 0x02, 0x00, 0x02, 0x02, 0x02, 0x02, 0x04 },
	{ 'k',      0x00, 0x04, 0x04, 0x05, 0x05, 0x06, 0x05, 0x05 },
	{ 'l',      0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01 },
	{ 'l',      0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x02 },
	{ 'm',      0x00, 0x00, 0x00, 0x05, 0x07, 0x07, 0x05, 0x05 },
	{ 'n',      0x00, 0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x05 },
	{ 'n',      0x00, 0x00, 0x00, 0x07, 0x05, 0x05, 0x05, 0x05 },
	{ 'o',      0x00, 0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x02 },
	{ 'p',      0x00, 0x00, 0x00, 0x06, 0x05, 0x06, 0x04, 0x04 },
	{ 'q',      0x00, 0x00, 0x00, 0x03, 0x05, 0x03, 0x01, 0x01 },
	{ 'r',      0x00, 0x00, 0x00, 0x06, 0x05, 0x04, 0x04, 0x04 },
	{ 's',      0x00, 0x00, 0x00, 0x03, 0x04, 0x02, 0x01, 0x06 },
	{ 't',      0x00, 0x02, 0x02, 0x02, 0x07, 0x02, 0x02, 0x01 },
	{ 't',      0x00, 0x02, 0x02, 0x07, 0x02, 0x02, 0x02, 0x01 },
	{ 'u',      0x00, 0x00, 0x00, 0x05, 0x05, 0x05, 0x05, 0x03 },
	{ 'v',      0x00, 0x00, 0x00, 0x05, 0x05, 0x05, 0x05, 0x02 },
	{ 'w',      0x00, 0x00, 0x00, 0x05, 0x05, 0x07, 0x07, 0x05 },
	{ 'x',      0x00, 0x00, 0x00, 0x05, 0x05, 0x02, 0x05, 0x05 },
	{ 'y',      0x00, 0x00, 0x00, 0x05, 0x05, 0x03, 0x01, 0x02 },
	{ 'z',      0x00, 0x00, 0x00, 0x07, 0x01, 0x02, 0x04, 0x07 },
	{ '{',      0x00, 0x03, 0x02, 0x02, 0x04, 0x02, 0x02, 0x03 },
	{ '|',      0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02 },
	{ '|',      0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02 },
	{ '}',      0x00, 0x06, 0x02, 0x02, 0x01, 0x02, 0x02, 0x06 },
	{ '\u00A7', 0x00, 0x03, 0x04, 0x02, 0x05, 0x02, 0x01, 0x06 },
	{ '\u00C4', 0x00, 0x05, 0x02, 0x05, 0x05, 0x07, 0x05, 0x05 },
	{ '\u00D6', 0x00, 0x05, 0x00, 0x07, 0x05, 0x05, 0x05, 0x07 },
	{ '\u00D6', 0x00, 0x05, 0x02, 0x05, 0x05, 0x05, 0x05, 0x02 },
	{ '\u00DC', 0x00, 0x05, 0x00, 0x05, 0x05, 0x05, 0x05, 0x07 },
	{ '\u00E4', 0x00, 0x00, 0x05, 0x00, 0x03, 0x05, 0x05, 0x03 },
	{ '\u00F6', 0x00, 0x00, 0x05, 0x00, 0x02, 0x05, 0x05, 0x02 },
	{ '\u00FC', 0x00, 0x00, 0x05, 0x00, 0x00, 0x05, 0x05, 0x03 },
	{ '\u00FC', 0x00, 0x00, 0x05, 0x00, 0x05, 0x05, 0x05, 0x03 },
	{ '\u00DF', 0x00, 0x02, 0x05, 0x06, 0x05, 0x05, 0x06, 0x04 },
	{ '\u25A0', 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F } };

  /*
   * 4x10-Zeichensatz (ML-DOS)
   */
  private static final int[][] font4x10 = {
    { '\u0020', 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    { '!',      0x00, 0x02, 0x07, 0x07, 0x02, 0x02, 0x00, 0x02, 0x00, 0x00 },
    { '\"',     0x00, 0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    { '#',      0x00, 0x00, 0x05, 0x07, 0x05, 0x07, 0x05, 0x00, 0x00, 0x00 },
    { '$',      0x00, 0x02, 0x07, 0x06, 0x02, 0x03, 0x07, 0x02, 0x00, 0x00 },
    { '%',      0x00, 0x00, 0x05, 0x01, 0x02, 0x02, 0x04, 0x05, 0x00, 0x00 },
    { '&',      0x00, 0x00, 0x02, 0x05, 0x02, 0x05, 0x04, 0x03, 0x00, 0x00 },
    { '\'',     0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    { '(',      0x00, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00 },
    { ')',      0x00, 0x04, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00 },
    { '*',      0x00, 0x00, 0x00, 0x05, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00 },
    { '+',      0x00, 0x00, 0x00, 0x02, 0x07, 0x02, 0x00, 0x00, 0x00, 0x00 },
    { ',',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00 },
    { '-',      0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00 },
    { '.',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00 },
    { '/',      0x00, 0x01, 0x01, 0x02, 0x02, 0x02, 0x04, 0x04, 0x00, 0x00 },
    { '0',      0x00, 0x02, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x00, 0x00 },
    { '1',      0x00, 0x01, 0x03, 0x05, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00 },
    { '2',      0x00, 0x02, 0x05, 0x05, 0x01, 0x02, 0x04, 0x07, 0x00, 0x00 },
    { '3',      0x00, 0x02, 0x05, 0x01, 0x02, 0x01, 0x05, 0x02, 0x00, 0x00 },
    { '4',      0x00, 0x04, 0x05, 0x05, 0x07, 0x01, 0x01, 0x01, 0x00, 0x00 },
    { '5',      0x00, 0x07, 0x04, 0x04, 0x07, 0x01, 0x05, 0x02, 0x00, 0x00 },
    { '6',      0x00, 0x02, 0x04, 0x04, 0x06, 0x05, 0x05, 0x02, 0x00, 0x00 },
    { '7',      0x00, 0x07, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x00, 0x00 },
    { '8',      0x00, 0x02, 0x05, 0x05, 0x02, 0x05, 0x05, 0x02, 0x00, 0x00 },
    { '9',      0x00, 0x02, 0x05, 0x05, 0x03, 0x01, 0x05, 0x02, 0x00, 0x00 },
    { ':',      0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00 },
    { ';',      0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x02, 0x02, 0x04, 0x00 },
    { '<',      0x00, 0x00, 0x01, 0x02, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00 },
    { '=',      0x00, 0x00, 0x00, 0x07, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00 },
    { '>',      0x00, 0x00, 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00, 0x00 },
    { '?',      0x00, 0x02, 0x05, 0x01, 0x02, 0x02, 0x00, 0x02, 0x00, 0x00 },
    { '@',      0x00, 0x06, 0x05, 0x01, 0x02, 0x05, 0x05, 0x03, 0x00, 0x00 },
    { 'A',      0x00, 0x02, 0x05, 0x05, 0x07, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'B',      0x00, 0x06, 0x05, 0x05, 0x06, 0x05, 0x05, 0x06, 0x00, 0x00 },
    { 'C',      0x00, 0x02, 0x05, 0x04, 0x04, 0x04, 0x05, 0x02, 0x00, 0x00 },
    { 'D',      0x00, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x06, 0x00, 0x00 },
    { 'E',      0x00, 0x07, 0x04, 0x04, 0x06, 0x04, 0x04, 0x07, 0x00, 0x00 },
    { 'F',      0x00, 0x07, 0x04, 0x04, 0x06, 0x04, 0x04, 0x04, 0x00, 0x00 },
    { 'G',      0x00, 0x02, 0x05, 0x04, 0x04, 0x05, 0x05, 0x03, 0x00, 0x00 },
    { 'H',      0x00, 0x05, 0x05, 0x05, 0x07, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'I',      0x00, 0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x07, 0x00, 0x00 },
    { 'J',      0x00, 0x07, 0x01, 0x01, 0x01, 0x01, 0x05, 0x02, 0x00, 0x00 },
    { 'K',      0x00, 0x05, 0x05, 0x06, 0x04, 0x06, 0x05, 0x05, 0x00, 0x00 },
    { 'L',      0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x07, 0x00, 0x00 },
    { 'M',      0x00, 0x05, 0x07, 0x07, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'N',      0x00, 0x06, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'O',      0x00, 0x07, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00, 0x00 },
    { 'P',      0x00, 0x06, 0x05, 0x05, 0x06, 0x04, 0x04, 0x04, 0x00, 0x00 },
    { 'Q',      0x00, 0x07, 0x05, 0x05, 0x05, 0x05, 0x07, 0x07, 0x01, 0x00 },
    { 'R',      0x00, 0x06, 0x05, 0x05, 0x06, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'S',      0x00, 0x02, 0x05, 0x04, 0x02, 0x01, 0x05, 0x02, 0x00, 0x00 },
    { 'T',      0x00, 0x07, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00 },
    { 'U',      0x00, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00, 0x00 },
    { 'V',      0x00, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x02, 0x00, 0x00 },
    { 'W',      0x00, 0x05, 0x05, 0x05, 0x05, 0x07, 0x07, 0x05, 0x00, 0x00 },
    { 'X',      0x00, 0x05, 0x05, 0x05, 0x02, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'Y',      0x00, 0x05, 0x05, 0x05, 0x07, 0x02, 0x02, 0x02, 0x00, 0x00 },
    { 'Z',      0x00, 0x07, 0x01, 0x01, 0x02, 0x04, 0x04, 0x07, 0x00, 0x00 },
    { '[',      0x00, 0x07, 0x04, 0x04, 0x04, 0x04, 0x04, 0x07, 0x00, 0x00 },
    { '\\',     0x00, 0x04, 0x04, 0x02, 0x02, 0x02, 0x01, 0x01, 0x00, 0x00 },
    { ']',      0x00, 0x07, 0x01, 0x01, 0x01, 0x01, 0x01, 0x07, 0x00, 0x00 },
    { '^',      0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    { '_',      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00 },
    { '`',      0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    { 'a',      0x00, 0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x03, 0x00, 0x00 },
    { 'b',      0x00, 0x04, 0x04, 0x06, 0x05, 0x05, 0x05, 0x06, 0x00, 0x00 },
    { 'c',      0x00, 0x00, 0x00, 0x03, 0x04, 0x04, 0x04, 0x03, 0x00, 0x00 },
    { 'd',      0x00, 0x01, 0x01, 0x03, 0x05, 0x05, 0x05, 0x03, 0x00, 0x00 },
    { 'e',      0x00, 0x00, 0x00, 0x02, 0x05, 0x07, 0x04, 0x07, 0x00, 0x00 },
    { 'f',      0x00, 0x02, 0x05, 0x04, 0x06, 0x04, 0x04, 0x04, 0x04, 0x00 },
    { 'g',      0x00, 0x00, 0x00, 0x03, 0x05, 0x05, 0x03, 0x01, 0x06, 0x00 },
    { 'h',      0x00, 0x04, 0x04, 0x06, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'i',      0x00, 0x00, 0x02, 0x00, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00 },
    { 'j',      0x00, 0x00, 0x02, 0x00, 0x02, 0x02, 0x02, 0x02, 0x06, 0x00 },
    { 'k',      0x00, 0x04, 0x04, 0x05, 0x05, 0x06, 0x05, 0x05, 0x00, 0x00 },
    { 'l',      0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x02, 0x00, 0x00 },
    { 'm',      0x00, 0x00, 0x00, 0x05, 0x07, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'n',      0x00, 0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x05, 0x00, 0x00 },
    { 'o',      0x00, 0x00, 0x00, 0x02, 0x05, 0x05, 0x05, 0x02, 0x00, 0x00 },
    { 'p',      0x00, 0x00, 0x00, 0x02, 0x05, 0x05, 0x06, 0x04, 0x04, 0x00 },
    { 'q',      0x00, 0x00, 0x00, 0x02, 0x05, 0x05, 0x03, 0x01, 0x01, 0x00 },
    { 'r',      0x00, 0x00, 0x00, 0x06, 0x05, 0x04, 0x04, 0x04, 0x00, 0x00 },
    { 's',      0x00, 0x00, 0x00, 0x02, 0x04, 0x02, 0x01, 0x06, 0x00, 0x00 },
    { 's',      0x00, 0x00, 0x00, 0x03, 0x04, 0x02, 0x01, 0x06, 0x00, 0x00 },
    { 't',      0x00, 0x02, 0x02, 0x07, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00 },
    { 'u',      0x00, 0x00, 0x00, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00, 0x00 },
    { 'v',      0x00, 0x00, 0x00, 0x05, 0x05, 0x05, 0x05, 0x02, 0x00, 0x00 },
    { 'w',      0x00, 0x00, 0x00, 0x05, 0x05, 0x07, 0x07, 0x05, 0x00, 0x00 },
    { 'x',      0x00, 0x00, 0x00, 0x05, 0x05, 0x02, 0x05, 0x05, 0x00, 0x00 },
    { 'y',      0x00, 0x00, 0x00, 0x05, 0x05, 0x05, 0x03, 0x01, 0x06, 0x00 },
    { 'y',      0x00, 0x00, 0x00, 0x05, 0x05, 0x05, 0x03, 0x01, 0x07, 0x00 },
    { 'z',      0x00, 0x00, 0x00, 0x07, 0x01, 0x02, 0x04, 0x07, 0x00, 0x00 },
    { '{',      0x00, 0x03, 0x02, 0x02, 0x04, 0x02, 0x02, 0x03, 0x00, 0x00 },
    { '|',      0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00 },
    { '}',      0x00, 0x06, 0x02, 0x02, 0x01, 0x02, 0x02, 0x06, 0x00, 0x00 },
    { '~',      0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    // Paragraph-Zeichen
    { '\u00A7', 0x00, 0x03, 0x04, 0x02, 0x05, 0x02, 0x01, 0x06, 0x00, 0x00 },
    // AE
    { '\u00C4', 0x00, 0x05, 0x02, 0x05, 0x05, 0x07, 0x05, 0x05, 0x00, 0x00 },
    // OE
    { '\u00D6', 0x00, 0x05, 0x00, 0x07, 0x05, 0x05, 0x05, 0x07, 0x00, 0x00 },
    // UE
    { '\u00DC', 0x00, 0x05, 0x00, 0x05, 0x05, 0x05, 0x05, 0x07, 0x00, 0x00 },
    // ae
    { '\u00E4', 0x00, 0x00, 0x05, 0x00, 0x02, 0x05, 0x05, 0x03, 0x00, 0x00 },
    // oe
    { '\u00F6', 0x00, 0x00, 0x05, 0x00, 0x02, 0x05, 0x05, 0x02, 0x00, 0x00 },
    // ue
    { '\u00FC', 0x00, 0x00, 0x05, 0x00, 0x05, 0x05, 0x05, 0x07, 0x00, 0x00 },
    // ss
    { '\u00DF', 0x00, 0x02, 0x05, 0x05, 0x06, 0x05, 0x05, 0x06, 0x04, 0x00 },
    // ausgefuelltes Rechteck -> gemappt auf Quadrat
    { '\u25A0', 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00 },
    { '\u25A0', 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x00 },
    { '\u25A0', 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F },
    // nicht ausgefuelltes Rechteck -> gemappt auf Quadrat
    { '\u25A1', 0x0F, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x0F, 0x00, 0x00 },
    { '\u25A1', 0x0F, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x0F, 0x00 },
    { '\u25A1', 0x0F, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x09, 0x0F } };


  private static Map<Long,Character> pixel8x8aCrc32ToChar = null;
  private static Map<Long,Character> pixel8x8bCrc32ToChar = null;
  private static Map<Long,Character> pixel4x8aCrc32ToChar = null;
  private static Map<Long,Character> pixel4x8bCrc32ToChar = null;
  private static Map<Long,Character> pixel4x10Crc32ToChar = null;

  private byte[] pixelBytes;


  public KC85CharRecognizer()
  {
    if( pixel8x8aCrc32ToChar == null ) {
      pixel8x8aCrc32ToChar = createCharMap( font8x8a );
    }
    if( pixel8x8bCrc32ToChar == null ) {
      pixel8x8bCrc32ToChar = createCharMap( font8x8b );
    }
    if( pixel4x8aCrc32ToChar == null ) {
      pixel4x8aCrc32ToChar = createCharMap( font4x8a );
    }
    if( pixel4x8bCrc32ToChar == null ) {
      pixel4x8bCrc32ToChar = createCharMap( font4x8b );
    }
    if( pixel4x10Crc32ToChar == null ) {
      pixel4x10Crc32ToChar = createCharMap( font4x10 );
    }
    this.pixelBytes = new byte[ 256 * 40 ];
  }


  public int getChar( CharRaster cRaster, int row, int col )
  {
    Character ch = null;
    switch( cRaster.getCharWidth() ) {
      case 4:
	ch = getChar4xH(
			cRaster.getCharMap(),
			cRaster.getTopLine(),
			row,
			col,
			cRaster.getRowHeight(),
			cRaster.getCharHeight(),
			false );
	break;
      case 8:
	ch = getChar8x8(
			cRaster.getCharMap(),
			cRaster.getTopLine(),
			row,
			col );
	break;
    }
    return ch != null ? ch.charValue() : -1;
  }


  public CharRaster recognizeCharRaster()
  {
    CharRasterResult result = new CharRasterResult();

    // ersten 8x8-Zeichnsatz testen
    recognizeCharRaster(
		result,
		pixel8x8aCrc32ToChar,
		0,
		8,
		8,
		8 );

    // zweiten 8x8-Zeichnsatz testen
    recognizeCharRaster(
		result,
		pixel8x8bCrc32ToChar,
		0,
		8,
		8,
		8 );

    // 4x10-Zeichnsatz testen
    for( int yOffs = 0; yOffs < 9; yOffs++ ) {
      recognizeCharRaster(
			result,
			pixel4x10Crc32ToChar,
			yOffs,
			10,
			10,
			4 );
    }

    // ersten 4x8-Zeichensatz testen
    for( int rh = 8; rh < 11; rh++ ) {
      for( int yOffs = 0; yOffs < rh; yOffs++ ) {
	recognizeCharRaster(
			result,
			pixel4x8aCrc32ToChar,
			yOffs,
			rh,
			8,
			4 );
      }
    }

    // zweiten 4x8-Zeichensatz testen
    for( int rh = 8; rh < 11; rh++ ) {
      for( int yOffs = 0; yOffs < rh; yOffs++ ) {
	recognizeCharRaster(
			result,
			pixel4x8bCrc32ToChar,
			yOffs,
			rh,
			8,
			4 );
      }
    }

    return result.getCharRaster();
  }


  public void setPixelByte( int col, int y, byte value )
  {
    this.pixelBytes[ (col << 8) | y ] = value;
  }


	/* --- private Methoden --- */

  private Map<Long,Character> createCharMap( int[][] font )
  {
    Map<Long,Character> map = new HashMap<>();
    CRC32               crc = new CRC32();
    for( int i = 0; i < font.length; i++ ) {
      crc.reset();
      for( int k = 1; k < font[ i ].length; k++ ) {
	crc.update( font[ i ][ k ] );
      }
      map.put(
	new Long( crc.getValue() ),
	new Character( (char) font[ i ][ 0 ] ) );
    }
    return map;
  }


  private Character getChar8x8(
			Map<Long,Character> map,
			int                 yOffs,
			int                 row,
			int                 col )
  {
    Character rv = null;
    if( map != null ) {
      int idx = yOffs + (col << 8) + (row << 3);
      if( (idx + 8) <= this.pixelBytes.length ) {
	CRC32 crc1 = new CRC32();
	CRC32 crc2 = new CRC32();
	for( int i = 0; i < 8; i++ ) {
	  int b = this.pixelBytes[ idx++ ];
	  crc1.update( b & 0xFF );
	  crc2.update( ~b & 0xFF );
	}
	rv = map.get( new Long( crc1.getValue() ) );
	if( rv == null ) {
	  rv = map.get( new Long( crc2.getValue() ) );
	}
      }
    }
    return rv;
  }


  private Character getChar4xH(
			Map<Long,Character> map,
			int                 yOffs,
			int                 row,
			int                 col,
			int                 hRow,
			int                 hChr,
			boolean             exactMatch )
  {
    Character rv = null;
    if( map != null ) {
      int c40 = col / 2;
      int begIdx = yOffs + (c40 << 8) + (row * hRow);
      if( (begIdx + hChr) <= this.pixelBytes.length ) {
	int     idx  = begIdx;
	boolean hi   = ((col & 0x01) == 0);
	CRC32   crc1 = new CRC32();
	CRC32   crc2 = new CRC32();
	for( int i = 0; i < hChr; i++ ) {
	  int b = this.pixelBytes[ idx++ ];
	  if( hi ) {
	    b >>= 4;
	  }
	  crc1.update( b & 0x0F );
	  crc2.update( ~b & 0x0F );
	}
	boolean inv = false;
	rv          = map.get( new Long( crc1.getValue() ) );
	if( rv == null ) {
	  rv  = map.get( new Long( crc2.getValue() ) );
	  inv = true;
	}
	if( exactMatch ) {

	  // Pixelzeilen bis zur naechsten Zeichenzeile muessen leer sein
	  if( (rv != null) && (hChr < hRow) ) {
	    if( (idx + hRow) < this.pixelBytes.length ) {
	      for( int i = hChr; i < hRow; i++ ) {
		int b = this.pixelBytes[ idx++ ];
		if( hi ) {
		  b >>= 4;
		}
		b &= 0x0F;
		if( (!inv && (b != 0)) || (inv && (b != 0x0F)) ) {
		  rv = null;
		}
	      }
	    }
	  }

	} else {

	  /*
	   * Wenn Zeichen nicht erkannt wurde,
	   * dann auf anderen Y-Positionen versuchen,
	   * wenn dies so gewuenscht ist.
	   */
	  if( rv == null ) {
	    for( int yDiff = -2; yDiff < 3; yDiff++ ) {
	      if( yDiff != 0 ) {
		idx = begIdx + yDiff;
		if( (idx >= 0) && ((idx + hChr) <= this.pixelBytes.length) ) {
		  crc1.reset();
		  crc2.reset();
		  for( int i = 0; i < hChr; i++ ) {
		    int b = this.pixelBytes[ idx++ ];
		    if( hi ) {
		      b >>= 4;
		    }
		    crc1.update( b & 0x0F );
		    crc2.update( ~b & 0x0F );
		  }
		  rv = map.get( new Long( crc1.getValue() ) );
		  if( rv == null ) {
		    rv  = map.get( new Long( crc2.getValue() ) );
		  }
		  if( rv != null ) {
		    break;
		  }
		}
	      }
	    }
	  }
	}
      }
    }
    return rv;
  }


  private void recognizeCharRaster(
				CharRasterResult    result,
				Map<Long,Character> cMap,
				int                 yOffs,
				int                 hRow,
				int                 hChr,
				int                 wChr )
  {
    int nFailed  = 0;
    int nSuccess = 0;
    int nRows    = 256 / hRow;
    int nCols    = 320 / wChr;
    for( int row = 0; row < nRows; row++ ) {
      for( int col = 0; col < nCols; col++ ) {
	Character ch = null;
	if( wChr == 4 ) {
	  /*
	   * Mit der Methode werden verschiedene Rasterpositionen
	   * ausprobiert.
	   * Aus diesem Grund soll hier die Methode getCharH4(..)
	   * das Zeichen nur bei der konkreten Rasterposition erkennen.
	   */
	  ch = getChar4xH( cMap, yOffs, row, col, hRow, hChr, true );
	} else if( wChr == 8 ) {
	  ch = getChar8x8( cMap, yOffs, row, col );
	}
	if( ch != null ) {
	  if( (ch.charValue() != '\u0020')
	      && (ch.charValue() != '\u25A0') )
	  {
	    nSuccess++;
	  }
	} else {
	  nFailed++;
	}
      }
    }
    if( nSuccess > 0 ) {
      float hitRate = 1F;
      if( nFailed > 0 ) {
	hitRate -= ((float) nFailed / (float) (nSuccess + nFailed));
      }
      CharRaster cRaster = new CharRaster(
					wChr == 4 ? 80 : 40,
					(256 - yOffs) / hRow,
					hRow,
					hChr,
					wChr,
					yOffs );
      cRaster.setCharMap( cMap );
      result.offer( hitRate, cRaster );
    }
  }
}
